<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/css" href="../css/tei_oxygen.css"?>
<?xml-stylesheet type="text/css" href="../css/tei.lex0.odd.css"?>
<div xmlns="http://www.tei-c.org/ns/1.0" xmlns:xi="http://www.w3.org/2001/XInclude" xml:id="entries">
   <head>Entries</head>
   <div>
      <head>General remarks</head>
      <p>An <gi>entry</gi> is a basic reference unit in a dictionary: it groups together all the
         information related to a particular lemma. For instance:</p>
      <list type="examples">
         <item>
            <egXML xmlns="http://www.tei-c.org/ns/Examples" source="#OALD1974">
               <xi:include href="../TEILex0.examples/examples.stripped.xml" corresp="../TEILex0.examples/examples.xml" xpointer="OALD.competitor"/>
            </egXML>
         </item>
         <item>
            <egXML xmlns="http://www.tei-c.org/ns/Examples" source="#Московљевић1990">
               <xi:include href="../TEILex0.examples/examples.stripped.xml" corresp="../TEILex0.examples/examples.xml" xpointer="MM.RSSKJ.круна"/>
            </egXML>
         </item>
      </list>
   </div>
   <div>
      <head>Mandatory attributes</head>
      <p>The TEI Lex-0 schema prescribes two mandatory attributes on <gi>entry</gi>:</p>
      <list>
         <item><att>xml:id</att>
            <hi rend="italic">uniquely</hi> identifies the element it is associated with;</item>
         <item><att>xml:lang</att> identifies the object language of the element it is associated
            with.</item>
      </list>
      <p>In XML, <att>xml:lang</att> is inherited from the immediately enclosing element or from its
         closest ancestor that has this attribute. This means that in XML not every element needs to
         have the <att>xml:lang</att> attribute. </p>
      <p>TEI Lex-0 recommends that <att>xml:lang</att> be attached to so-called container elements
         (such as <gi>entry</gi> and <gi>cit</gi>) rather than individual <gi>form</gi> elements. </p>
      <p>In addition, TEI Lex-0 privileges <code>&lt;entry></code> as the dictioanry's central
         textual component by requiring both a uniqe identifier (<att>xml:id</att>) as well as
            <att>xml:lang</att>. </p>
      <floatingText type="inFocusPanel" xml:id="naming-your-languages">
         <body>
            <head>Naming your languages </head>
            <p><att>xml:lang</att> identifies the object language of the element it is associated
               with. The language ‘tag’ (i.e. the value of this attribute) must follow <ref
                  target="http://www.rfc-editor.org/rfc/bcp/bcp47.txt">IETF BCP 47</ref>, the
               Internet Engineering Task Force's best-practice document outlining standard
               identifiers for labeling language content. To learn more about what language tag is
               appropriate for your project, check out W3C's useful resource on <ref
                  target="https://www.w3.org/International/questions/qa-choosing-language-tags.en"
                  >choosing language tags</ref>. </p>
            <p>If the language or language variety you are working on is not covered by BCP 47, make
               sure to follow the syntax of Private Use Tags described in BCP 47 <ref
                  target="https://tools.ietf.org/html/bcp47#section-2.2.7">Section 2.2.7</ref> when
               creating one. Do this only if you are absolutely certain that no standard tag exists
               for your object language. </p>
            <p>If you have created a "private" language tag, you can validate it (in terms of its
               structural well-formedness and validity) using the <ref
                  target="https://schneegans.de/lv/"> BCP 47 validator</ref>.</p>
            <p>Language tags containing private-use subtags should be documented in the TEI header,
               specifically using one or more <gi>language</gi> elements grouped under
                  <gi>langUsage</gi> inside <gi>profileDesc</gi>:</p>
            <egXML xmlns="http://www.tei-c.org/ns/Examples">
               <profileDesc>
                  <langUsage>
                     <language ident="mix">Mixtepec Mixtec</language>
                     <language ident="mix-x-YCNY">Yucanany Mixtec</language>
                  </langUsage>
               </profileDesc>
            </egXML>
         </body>
      </floatingText>
   </div>
   <div>
      <head>Grammatical properties</head>
      <p>Grammatical properties of lexical entries should be specified in
         <code>entry/gramGrp</code>. This element will typically specify the part-of-speech of the
         entry.</p>
      <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <entry xml:lang="en" type="mainEntry" xml:id="on">
                <form type="lemma"><orth>on</orth></form>
                <gramGrp>
                    <gram type="pos">prep</gram>
                </gramGrp>
                <!--...-->
            </entry>
        </egXML>
      <p>Notes:</p>
      <list type="ordered">
         <item>Grammatical properties of the entry as a whole should <hi rend="italic">not</hi> be
            specified in <code rend="language-xpath">entry/form[@type="lemma"]/gramGrp</code>. </item>
         <item><code rend="language-xpath">entry/form/gramGrp</code> should be used only if a
            particular form (a dialectal variant, for instance) has different grammatical properties
            from the lemma; or to indicate the grammatical properties of the inflected form which
            clearly deviate from the lemma. </item>
         <item>For entries which group grammatical homonyms inside single entries (e.g. in English
            dictionaries which do not have separate entries for conversion pairs of nouns and verbs,
            such as <hi rend="bold">run</hi> or <hi rend="bold">aid</hi> see the discussion under
               <ref target="#nested-entries-vs-multiple-senses">Nested entries vs.
               multiple-senses</ref>. </item>
      </list>
   </div>
   <div>
      <head>Deprecated entry-like elements</head>
      <p>The current TEI Guidelines define five different container elements that may serve as
         grouping devices for entry-level lexical information:</p>
      <list>
         <item><gi>entry</gi>: contains a single <hi rend="italic">structured entry</hi> in any kind
            of lexical resource, such as a dictionary or lexicon.</item>
         <item><gi>entryFree</gi>: contains a single <hi rend="italic">unstructured entry</hi> in
            any kind of lexical resource, such as a dictionary or lexicon.</item>
         <item><gi>superEntry</gi>: groups a sequence of entries within any kind of lexical
            resource, such as a dictionary or lexicon which function as a single unit, for example a
            set of homographs.</item>
         <item><gi>re</gi>: (related entry) contains a dictionary entry for a lexical item related
            to the headword, such as a compound phrase or derived form, embedded inside a larger
            entry.</item>
         <item><gi>hom</gi>: (homograph) groups information relating to one homograph within an
            entry</item>
      </list>
      <p>These five elements can be used to distinguish different types of entries along two
         conceptual axes:</p>
      <list>
         <item>Structured vs. unstructured entries, i. e. entries that can readily be represented
            (in the lexical view) in the spirit of the TEI Guideline’s Dictionary Chapter
               (<gi>entry</gi>, <gi>re</gi>) vs. entries that for some reason violate the generic
            content model of <gi>entry</gi> or <gi>re</gi> and thus have to be represented more
            freely (<gi>entryFree</gi>). A third category in this respect are entries that exhibit a
            highly reduced amount of lexical content while this content is still of essentially
            entry-like nature (<gi>superEntry</gi>). </item>
         <item>Containing vs. contained entries: entries may contain additional lexical information
            that can be conceived as an additional dictionary entry in its own right. Specifically,
               <gi>superEntry</gi> may contain <gi>entry</gi>, and <gi>entry</gi> in turn may
            contain <gi>re</gi> to represent the embedding of lexical entries on three distinct
            levels. Due to <gi>re</gi> being allowed to be used recursively, the number of levels
            for representing entry-like lexical information inside other such blocks is effectively
            unrestricted. At the same time, two different mechanism can be used to create
            homographic entries: <gi>superEntry</gi> containing multiple <gi>entry</gi> elements; or
               <gi>entry</gi> containing multiple <gi>hom</gi> elements. </item>
      </list>
      <div>
         <head><gi>hom</gi></head>
         <p>Making a clear difference between a situation where an entry has to be split into two or
            more homonyms and one where these differences correspond to a semantic alternation is
            lexicographically difficult. Still, the main danger in keeping both possibilities in the
            representation of a lexical entry in a digital lexicon is to introduce a systematic
            structural ambiguity as to where the appropriate information is to be found. We thus
            deprecate <gi>hom</gi> altogether in the present recommendation and have this element be
            replaced by the nested <gi>entry</gi> construct. For instance, the following example
            from the TEI <hi rend="italic">Guidelines</hi>:</p>
         <egXML xmlns="http://www.tei-c.org/ns/Examples" valid="false">
            <entry>
                <form>
                    <orth>bray</orth>
                    <pron>breI</pron>
                </form>
                <hom>
                    <gramGrp>
                        <gram type="pos">n</gram>
                    </gramGrp>
                    <sense>
                        <def>cry of an ass; sound of a trumpet.</def>
                    </sense>
                </hom>
                <hom>
                    <gramGrp>
                        <gram type="pos">vt</gram>
                        <subc>VP2A</subc>
                    </gramGrp>
                    <sense>
                        <def>make a cry or sound of this kind.</def>
                    </sense>
                </hom>
            </entry>
        </egXML>
         <p>would in TEI Lex-0 be represented as:</p>
         <egXML xmlns="http://www.tei-c.org/ns/Examples">
            <xi:include href="../TEILex0.examples/examples.stripped.xml" corresp="../TEILex0.examples/examples.xml" xpointer="bray"/>
        </egXML>
      </div>
      <div>
         <head><gi>superEntry</gi></head>
         <p>By making <gi>entry</gi> recursive, TEI Lex-0 has eliminated the need for grouping
            entries with <gi>superEntry</gi>.</p>
         <p>This is especially important for traditional root-based dictionaries, which start with
            the root as the main headword, followed by full-fledged lexicographic entries of derived
            headwords.</p>
         
         <figure>
            <graphic url="https://imgur.com/Lb2sxyo.png"></graphic>
         </figure>
         
         <list type="examples">
            <item>
               <egXML xmlns="http://www.tei-c.org/ns/Examples" source="#Almonjid2014">
                  <xi:include href="../TEILex0.examples/examples.stripped.xml" corresp="../TEILex0.examples/examples.xml" xpointer="syj"/>
               </egXML>
            </item>
            <item>
               <egXML xmlns="http://www.tei-c.org/ns/Examples" source="#Almonjid2014">
                  <xi:include href="../TEILex0.examples/examples.stripped.xml" corresp="../TEILex0.examples/examples.xml" xpointer="shahama"/>
               </egXML>
            </item>
         </list>
         <p>See also Section on <ref target="#grammatical-properties-in-senses">grammatical
               properties in senses</ref>.</p>
      </div>
   </div>
</div>
