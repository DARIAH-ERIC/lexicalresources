<?xml version="1.0" encoding="UTF-8"?>
<project version="22.1">
    <meta>
        <filters directoryPatterns="" filePatterns="TEILex0.xpr" positiveFilePatterns="" showHiddenFiles="false"/>
        <options>
            <serialized version="22.1" xml:space="preserve">
                <serializableOrderedMap>
                    <entry>
                        <String>Shk.Escape_selection.Source</String>
                        <String>M1 M3 EURO_SIGN</String>
                    </entry>
                    <entry>
                        <String>Shk.Refresh_references.Author</String>
                        <String>M1 M2 R</String>
                    </entry>
                    <entry>
                        <String>Shk.Rename_element.Markup</String>
                        <String>M1 M3 R</String>
                    </entry>
                    <entry>
                        <String>Shk.XPath_Builder.Perspective</String>
                        <String>ctrl meta alt X</String>
                    </entry>
                    <entry>
                        <String>author.tags.font</String>
                        <String>Monospaced,0,14</String>
                    </entry>
                    <entry>
                        <String>code-templates</String>
                        <codeTemplateItem-array>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/any</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;form type="lemma">
    &lt;orth>${selection}&lt;/orth>
&lt;/form></String>
                                </field>
                                <field name="descriptionString">
                                    <String></String>
                                </field>
                                <field name="renderString">
                                    <String>lemma</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ChangeAttributeOperation',
          arg-elementLocation, '.',
          arg-name, '',
          arg-namespace, '',
          arg-value, '',
          arg-removeIfEmpty, 'true',
          arg-editAttribute, 'true'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Add/modify/delete an attribute.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementLocation&lt;/b> = An XPath expression indicating the element whose attribute will be changed.
Note: If it is not defined then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>name&lt;/b> = The attribute local name.&lt;/li>&lt;li>&lt;b>namespace&lt;/b> = The attribute namespace. Leave it empty for no namespace.&lt;/li>&lt;li>&lt;b>value&lt;/b> = The attribute value. Set it empty to remove the attribute.&lt;/li>&lt;li>&lt;b>removeIfEmpty&lt;/b> = True means that the attribute should be removed if an empty value is provided. The default behavior is to remove it.&lt;/li>&lt;li>&lt;b>editAttribute&lt;/b> = If an in-place editor exists for this attribute, it will automatically activate the in-pace editor and it will start editing.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ChangeAttributeOperation',&lt;br/>          arg-elementLocation, '.',&lt;br/>          arg-name, '',&lt;br/>          arg-namespace, '',&lt;br/>          arg-value, '',&lt;br/>          arg-removeIfEmpty, 'true',&lt;br/>          arg-editAttribute, 'true'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ChangeAttributeOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ChangeAttributesOperation',
          arg-elementLocations, '.',
          arg-attributeNames, '',
          arg-values, '',
          arg-removeIfEmpty, 'true'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Add/change/remove one or more attributes for one or more elements.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementLocations&lt;/b> = An XPath expression indicating the elements whose attributes will be affected.
Note: If it is not defined, then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>attributeNames&lt;/b> = The names of the attributes to change/insert/remove, each on a new line. The provided values can be local names or Clark notations ({attribute_namespace}attibute_name).&lt;/li>&lt;li>&lt;b>values&lt;/b> = The attribute values, each on a new line. An empty value will remove the corresponding attribute if 'removeIfEmpty' is set to 'true' (it is by default).&lt;/li>&lt;li>&lt;b>removeIfEmpty&lt;/b> = 'true' means the attribute should be removed if an empty value is provided. The default value is 'true'.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ChangeAttributesOperation',&lt;br/>          arg-elementLocations, '.',&lt;br/>          arg-attributeNames, '',&lt;br/>          arg-values, '',&lt;br/>          arg-removeIfEmpty, 'true'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ChangeAttributesOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ChangePseudoClassesOperation',
          arg-setLocations, '.',
          arg-setPseudoClassNames, '',
          arg-removeLocations, '.',
          arg-removePseudoClassNames, '',
          arg-includeAllNodes, 'no'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Sets a set of pseudo classes to all nodes identified by an XPath expression.
Removes a set of pseudo classes from all nodes identified by an XPath expression.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>setLocations&lt;/b> = An XPath expression indicating a list of nodes on which the specified list of pseudo classes will be set.
Note: If it is not defined, then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>setPseudoClassNames&lt;/b> = A space-separated list of pseudo class names which will be set on the matched nodes.&lt;/li>&lt;li>&lt;b>removeLocations&lt;/b> = An XPath expression indicating a list of nodes from which the specified list of pseudo classes will be removed.
Note: If it is not defined, then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>removePseudoClassNames&lt;/b> = A space-separated list of pseudo class names which will be removed from the matched nodes.&lt;/li>&lt;li>&lt;b>includeAllNodes&lt;/b> = The value should be "yes" in order to include comments, text and CDATA nodes in the XPath execution, "no" to ignore them.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ChangePseudoClassesOperation',&lt;br/>          arg-setLocations, '.',&lt;br/>          arg-setPseudoClassNames, '',&lt;br/>          arg-removeLocations, '.',&lt;br/>          arg-removePseudoClassNames, '',&lt;br/>          arg-includeAllNodes, 'no'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ChangePseudoClassesOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.DeleteElementOperation',
          arg-elementLocation, '.'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Deletes the element specified by an XPath expression or the element at the caret position&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementLocation&lt;/b> = An XPath expression indicating the element to be deleted.
Note: If it is not defined, then the element at the caret position will be used.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.DeleteElementOperation',&lt;br/>          arg-elementLocation, '.'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_DeleteElementOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.DeleteElementsOperation',
          arg-elementLocations, '.'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Deletes the elements specified by an XPath expression or the element at the caret position&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementLocations&lt;/b> = An XPath expression indicating the elements to be deleted.
Note: If it is not defined then the element at the caret position will be used.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.DeleteElementsOperation',&lt;br/>          arg-elementLocations, '.'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_DeleteElementsOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteCommandLineOperation',
          arg-name, 'Command Line Operation',
          arg-workingDirectory, '.',
          arg-cmdLine, '',
          arg-showConsole, 'false'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Author operation allowing the execution of command lines.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>name&lt;/b> = The name of the operation. It will also be used as the name of the console.&lt;/li>&lt;li>&lt;b>workingDirectory&lt;/b> = The path to the working directory where the command line will be executed.&lt;/li>&lt;li>&lt;b>cmdLine&lt;/b> = The command line to be executed. It can contain oXygen editor variables. IMPORTANT: This operation is meant for executing programs. Not any string that a command line interpreter (or shell) accepts can be run by this operation.For example, the "dir" command line from Windows is not accepted as it is. The accepted form is "cmd /c dir".&lt;/li>&lt;li>&lt;b>showConsole&lt;/b> = True to show the console when running the command line.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteCommandLineOperation',&lt;br/>          arg-name, 'Command Line Operation',&lt;br/>          arg-workingDirectory, '.',&lt;br/>          arg-cmdLine, '',&lt;br/>          arg-showConsole, 'false'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ExecuteCommandLineOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteMultipleActionsOperation',
          arg-actionIDs, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Run a sequence of actions defined in the associated document type.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>actionIDs&lt;/b> = The IDs of the actions that will be executed in sequence, separated either by new lines or by commas.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteMultipleActionsOperation',&lt;br/>          arg-actionIDs, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ExecuteMultipleActionsOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteMultipleWebappCompatibleActionsOperation',
          arg-actionIDs, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Run a sequence of actions defined in the associated document type.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>actionIDs&lt;/b> = The IDs of the actions that will be executed in sequence, separated either by new lines or by commas.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteMultipleWebappCompatibleActionsOperation',&lt;br/>          arg-actionIDs, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ExecuteMultipleWebappCompatibleActionsOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteTransformationScenariosOperation',
          arg-scenarioNames, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Run a named transformation scenario defined in the associated document type.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>scenarioNames&lt;/b> = The names of the transformation scenario which will be executed, separated by new lines.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteTransformationScenariosOperation',&lt;br/>          arg-scenarioNames, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ExecuteTransformationScenariosOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.InsertEquationOperation',
          arg-fragment, '&lt;mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML">&lt;/mml:math>'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Insert a MathML equation.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>fragment&lt;/b> = The fragment of XML containing the default MathML content which should be inserted&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.InsertEquationOperation',&lt;br/>          arg-fragment, '&lt;mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML">&lt;/mml:math>'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_InsertEquationOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation',
          arg-fragment, '&lt;element/>',
          arg-insertLocation, '.',
          arg-insertPosition, 'Inside as first child',
          arg-schemaAware, 'true',
          arg-goToNextEditablePosition, 'true'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Insert a document fragment.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>fragment&lt;/b> = The fragment to be inserted&lt;/li>&lt;li>&lt;b>insertLocation&lt;/b> = An XPath expression indicating the insert location for the fragment.
Note: If it is not defined then the insert location will be at the caret.&lt;/li>&lt;li>&lt;b>insertPosition&lt;/b> = The insert position relative to the node determined by the XPath expression.
Can be: Before, Inside as first child, Inside as last child or After.
Note: If the XPath expression is not defined this argument is ignored&lt;/li>&lt;li>&lt;b>schemaAware&lt;/b> = Controlling if the insertion is schema aware or not. When is enabled and the fragments insertion is not allowed, a dialog will be shown proposing one of following solutions if they apply:
 - insert the fragments inside a new element. The name of the element to wrap the fragments in is computed by analyzing the left or right siblings;
 - split an ancestor of the node at insertion offset and insert the fragments between the resulted elements;
 - insert the fragments somewhere in the proximity of the insertion offset(left or right without skipping content);
 - insert at offset the plain text resulted after removing the mark-up;
 - insert the fragments at insertion offset, even they are not allowed.

Can be: true, false. Default value is true.&lt;/li>&lt;li>&lt;b>goToNextEditablePosition&lt;/b> = After inserting the fragment, the first editable position is detected and the caret is placed at that location. It handles any in-place editors used to edit attributes. It will be ignored if the fragment specifies a caret position using the caret editor variable.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation',&lt;br/>          arg-fragment, '&lt;element/>',&lt;br/>          arg-insertLocation, '.',&lt;br/>          arg-insertPosition, 'Inside as first child',&lt;br/>          arg-schemaAware, 'true',&lt;br/>          arg-goToNextEditablePosition, 'true'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_InsertFragmentOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.InsertOrReplaceFragmentOperation',
          arg-fragment, '&lt;element/>',
          arg-insertLocation, '.',
          arg-insertPosition, 'Inside as first child',
          arg-schemaAware, 'true',
          arg-goToNextEditablePosition, 'true'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Insert a document fragment. If selection is present, the selection will be replaced with the given fragment.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>fragment&lt;/b> = The fragment to be inserted&lt;/li>&lt;li>&lt;b>insertLocation&lt;/b> = An XPath expression indicating the insert location for the fragment.
Note: If it is not defined then the insert location will be at the caret.&lt;/li>&lt;li>&lt;b>insertPosition&lt;/b> = The insert position relative to the node determined by the XPath expression.
Can be: Before, Inside as first child, Inside as last child, Replace or After.
Note: If the XPath expression is not defined this argument is ignored&lt;/li>&lt;li>&lt;b>schemaAware&lt;/b> = Controlling if the insertion is schema aware or not. When is enabled and the fragments insertion is not allowed, a dialog will be shown proposing one of following solutions if they apply:
 - insert the fragments inside a new element. The name of the element to wrap the fragments in is computed by analyzing the left or right siblings;
 - split an ancestor of the node at insertion offset and insert the fragments between the resulted elements;
 - insert the fragments somewhere in the proximity of the insertion offset(left or right without skipping content);
 - insert at offset the plain text resulted after removing the mark-up;
 - insert the fragments at insertion offset, even they are not allowed.

Can be: true, false. Default value is true.&lt;/li>&lt;li>&lt;b>goToNextEditablePosition&lt;/b> = After inserting the fragment, the first editable position is detected and the caret is placed at that location. It handles any in-place editors used to edit attributes. It will be ignored if the fragment specifies a caret position using the caret editor variable.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.InsertOrReplaceFragmentOperation',&lt;br/>          arg-fragment, '&lt;element/>',&lt;br/>          arg-insertLocation, '.',&lt;br/>          arg-insertPosition, 'Inside as first child',&lt;br/>          arg-schemaAware, 'true',&lt;br/>          arg-goToNextEditablePosition, 'true'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_InsertOrReplaceFragmentOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.InsertOrReplaceTextOperation',
          arg-text, '',
          arg-schemaAware, 'true'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Insert a simple text. If selection is present, the selected text will be replaced with the new one.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>text&lt;/b> = The text to be inserted&lt;/li>&lt;li>&lt;b>schemaAware&lt;/b> = Controlling if the insertion is schema aware or not. When is enabled and the fragments insertion is not allowed, a dialog will be shown proposing one of following solutions if they apply:
 - insert the fragments inside a new element. The name of the element to wrap the fragments in is computed by analyzing the left or right siblings;
 - split an ancestor of the node at insertion offset and insert the fragments between the resulted elements;
 - insert the fragments somewhere in the proximity of the insertion offset(left or right without skipping content);
 - insert at offset the plain text resulted after removing the mark-up;
 - insert the fragments at insertion offset, even they are not allowed.

Can be: true, false. Default value is true.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.InsertOrReplaceTextOperation',&lt;br/>          arg-text, '',&lt;br/>          arg-schemaAware, 'true'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_InsertOrReplaceTextOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.InsertXIncludeOperation'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Insert an XInclude element&lt;/p>&lt;br/>Arguments: &lt;p style="margin-left:10px;">This operation has no arguments.&lt;/p> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.InsertXIncludeOperation'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_InsertXIncludeOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.JSOperation',
          arg-script, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Run Javascript code which calls AuthorAccess API by using the predefined field 'authorAccess'.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>script&lt;/b> = The Javascript content to execute. It must have a function called doOperation() which can use the predefined variable "authorAccess".
The "authorAccess" variable has access to the entire Java API "ro.sync.ecss.extensions.api.AuthorAccess".&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.JSOperation',&lt;br/>          arg-script, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_JSOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.MoveCaretOperation',
          arg-xpathLocation, '.',
          arg-position, 'Inside, at the beginning',
          arg-selection, 'None'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Author operation capable of moving the caret relative to an XML node identified by an XPath expression. The operation can also select an XML element or its content.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>xpathLocation&lt;/b> = An XPath expression identifying the node relative to which the caret will be moved. If the expression identifies more than one node, only the first one will be taken into account.&lt;/li>&lt;li>&lt;b>position&lt;/b> = The position relative to the node obtained from the XPath expression where the caret will be moved. When also choosing to perform a selection, "Before" and "Inside, at the beginning" will both place the caret at the beginning of the selection. In the same way, "After" and "Inside, at the end" will place the caret at the end of the selection.&lt;/li>&lt;li>&lt;b>selection&lt;/b> = This argument specifies if the operation should select the element obtained from the XPath expression, its content or nothing at all.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.MoveCaretOperation',&lt;br/>          arg-xpathLocation, '.',&lt;br/>          arg-position, 'Inside, at the beginning',&lt;br/>          arg-selection, 'None'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_MoveCaretOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.MoveElementOperation',
          arg-sourceLocation, '.',
          arg-moveOnlySourceContentNodes, 'false',
          arg-deleteLocation, '.',
          arg-surroundFragment, '&lt;element/>',
          arg-targetLocation, '.',
          arg-insertPosition, 'Inside as first child',
          arg-processTrackedChangesForXPathLocations, 'false'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Moves an element to a different location. The element to move as well as the destination are provided through XPath expressions.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>sourceLocation&lt;/b> = An XPath expression that identifies the node to be moved. If missing, the node at caret will be moved.&lt;/li>&lt;li>&lt;b>moveOnlySourceContentNodes&lt;/b> = Controls whether the source element is moved entirely or just its content (the content of a node consists in text, other nodes or both). If true, the copied fragment consists in just the content of the node identified by the argument 'sourceLocation'. If false, the entire node will be copied.&lt;/li>&lt;li>&lt;b>deleteLocation&lt;/b> = An XPath expression that identifies the node to be removed. Optional. If missing, the node identified by 'sourceLocation' as being moved will be removed.&lt;/li>&lt;li>&lt;b>surroundFragment&lt;/b> = A string representation of an XML fragment. The moved node will be inserted in the first leaf will be this fragment and this fragment containing the moved node will be placed at the destination.&lt;/li>&lt;li>&lt;b>targetLocation&lt;/b> = An XPath expression that identifies the location where the node must be moved to.&lt;/li>&lt;li>&lt;b>insertPosition&lt;/b> = The insert position relative to the node determined by the "targetLocation" XPath expression.
Can be: Before, Inside as first child, Inside as last child or After.
Note: If the XPath expression is not defined this argument is ignored&lt;/li>&lt;li>&lt;b>processTrackedChangesForXPathLocations&lt;/b> = When nodes are located via XPath, if you have nodes deleted with change tracking in the document they are considered as being present by default.
But if you set this argument to 'true', the nodes deleted with track changes will be ignored when the xpath locations are computed. &lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.MoveElementOperation',&lt;br/>          arg-sourceLocation, '.',&lt;br/>          arg-moveOnlySourceContentNodes, 'false',&lt;br/>          arg-deleteLocation, '.',&lt;br/>          arg-surroundFragment, '&lt;element/>',&lt;br/>          arg-targetLocation, '.',&lt;br/>          arg-insertPosition, 'Inside as first child',&lt;br/>          arg-processTrackedChangesForXPathLocations, 'false'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_MoveElementOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.OpenInSystemAppOperation',
          arg-resourcePath, '.',
          arg-isUnparsedEntity, 'false',
          arg-mediaType, 'html'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Open in default system application&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>resourcePath&lt;/b> = An XPath expression that gives the path of the resource that must be opened.&lt;/li>&lt;li>&lt;b>isUnparsedEntity&lt;/b> = True if the value returned by the resourcePath argument represents the name of an unparsed entity.&lt;/li>&lt;li>&lt;b>mediaType&lt;/b> = The media type of the file to be opened. &lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.OpenInSystemAppOperation',&lt;br/>          arg-resourcePath, '.',&lt;br/>          arg-isUnparsedEntity, 'false',&lt;br/>          arg-mediaType, 'html'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_OpenInSystemAppOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.PromoteDemoteItemOperation',
          arg-promote, 'false'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Promotes or demotes a list item.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>promote&lt;/b> = Should be true to promote the list item at the caret position, or false to demote it.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.PromoteDemoteItemOperation',&lt;br/>          arg-promote, 'false'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_PromoteDemoteItemOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ReloadContentOperation',
          arg-markAsNotModified, 'false'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Reloads the content of the editor by reading again from the URL used to open it&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>markAsNotModified&lt;/b> = After reloading the content the editor may appear as modified. Sometimes, the content is already present on the file server, so the user should not save it again. This flags can be used in these cases to prevent the editor from showing as modified&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ReloadContentOperation',&lt;br/>          arg-markAsNotModified, 'false'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ReloadContentOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.RemovePseudoClassOperation',
          arg-elementLocation, '.',
          arg-name, '',
          arg-includeAllNodes, 'no'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Removes the pseudo class for an element.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementLocation&lt;/b> = An XPath expression indicating the element or elements whose pseudo-class will be changed.
Note: If this is not defined then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>name&lt;/b> = The pseudo-class name.&lt;/li>&lt;li>&lt;b>includeAllNodes&lt;/b> = The value should be "yes" in order to include comments, text and CDATA nodes in the XPath execution, "no" to ignore them.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.RemovePseudoClassOperation',&lt;br/>          arg-elementLocation, '.',&lt;br/>          arg-name, '',&lt;br/>          arg-includeAllNodes, 'no'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_RemovePseudoClassOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.RenameElementOperation',
          arg-elementName, '',
          arg-elementLocation, '.'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Renames the elements identified by the given XPath expression or the current element if no XPath is provided.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementName&lt;/b> = A string representing the new elements' qualified name. To declare a new namespace, append to the qualified name the pound (#) character and the namespace declaration.&lt;/li>&lt;li>&lt;b>elementLocation&lt;/b> = An XPath expression indicating the elements to be renamed.
Note: If it is not defined then the element at the caret position will be used.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.RenameElementOperation',&lt;br/>          arg-elementName, '',&lt;br/>          arg-elementLocation, '.'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_RenameElementOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ReplaceContentOperation',
          arg-content, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Replaces the content of a document.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>content&lt;/b> = The new content of the document.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ReplaceContentOperation',&lt;br/>          arg-content, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ReplaceContentOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ReplaceElementContentOperation',
          arg-elementLocation, '.',
          arg-fragment, '&lt;element/>'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Replaces the content of the fully selected element or the content of the element at caret (if the selection is empty or a node is not entirely selected)&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementLocation&lt;/b> = An XPath expression indicating the element whose attribute will be changed.
Note: If it is not defined then the element at the caret position or the current fully selected element will be used.&lt;/li>&lt;li>&lt;b>fragment&lt;/b> = The new content of the element.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ReplaceElementContentOperation',&lt;br/>          arg-elementLocation, '.',&lt;br/>          arg-fragment, '&lt;element/>'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ReplaceElementContentOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.SetPseudoClassOperation',
          arg-elementLocation, '.',
          arg-name, '',
          arg-includeAllNodes, 'no'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Sets the pseudo class for an element.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementLocation&lt;/b> = An XPath expression indicating the element or elements whose pseudo-class will be changed.
Note: If this is not defined then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>name&lt;/b> = The pseudo-class name.&lt;/li>&lt;li>&lt;b>includeAllNodes&lt;/b> = The value should be "yes" in order to include comments, text and CDATA nodes in the XPath execution, "no" to ignore them.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.SetPseudoClassOperation',&lt;br/>          arg-elementLocation, '.',&lt;br/>          arg-name, '',&lt;br/>          arg-includeAllNodes, 'no'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_SetPseudoClassOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.SetReadOnlyStatusOperation',
          arg-read-only, 'true',
          arg-reason, '',
          arg-reason-code, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Changes the document read-only status.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>read-only&lt;/b> = Sets the read-only status of the current document.Can be:
 - true: for making the document read-only
 - false: for making the document writable
Default value is true.&lt;/li>&lt;li>&lt;b>reason&lt;/b> = The reason for the document being read-only. It will be displayed when the user tries to edit the document.
If not specified, a default message will be displayed to the user.&lt;/li>&lt;li>&lt;b>reason-code&lt;/b> = The code for the reason for the document being read-only. It will be accessible through API. Optional.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.SetReadOnlyStatusOperation',&lt;br/>          arg-read-only, 'true',&lt;br/>          arg-reason, '',&lt;br/>          arg-reason-code, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_SetReadOnlyStatusOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ShowElementDocumentationOperation',
          arg-URL pattern, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Shows the current element documentation in reference manual.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>URL pattern&lt;/b> = The URL pattern of elements documentation.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ShowElementDocumentationOperation',&lt;br/>          arg-URL pattern, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ShowElementDocumentationOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.SurroundWithFragmentOperation',
          arg-fragment, '&lt;element/>',
          arg-schemaAware, 'true'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Surround the selected text with a document fragment. If there is no selection the fragment will be inserted at the current position.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>fragment&lt;/b> = The fragment to surround with. The first leaf will be the destination of the text to surround.&lt;/li>&lt;li>&lt;b>schemaAware&lt;/b> = Controlling if the insertion is schema aware or not. When the schema aware is enabled and the fragments insertion is not allowed a dialog will be shown, proposing solutions, like:
 - insert the fragments inside a new element. The name of the element to wrap the fragments in is computed by analyzing the left or right siblings;
 - split an ancestor of the node at insertion offset and insert the fragments between the resulted elements;
 - insert the fragments somewhere in the proximity of the insertion offset(left or right without skipping content);
Note: if a selection exists the surround with fragment operation is not schema aware.
Can be: true, false. Default value is true.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.SurroundWithFragmentOperation',&lt;br/>          arg-fragment, '&lt;element/>',&lt;br/>          arg-schemaAware, 'true'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_SurroundWithFragmentOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.SurroundWithTextOperation',
          arg-header, '',
          arg-footer, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Surround a selection with text. Places a header at the start of the selection and a footer at the end.If no selection exists, the word at caret will be surrounded.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>header&lt;/b> = The text to append before&lt;/li>&lt;li>&lt;b>footer&lt;/b> = The text to append after&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.SurroundWithTextOperation',&lt;br/>          arg-header, '',&lt;br/>          arg-footer, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_SurroundWithTextOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.TogglePseudoClassOperation',
          arg-elementLocation, '.',
          arg-name, '',
          arg-includeAllNodes, 'no'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Toggles on/off the pseudo-class of an element.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementLocation&lt;/b> = An XPath expression indicating the element or elements whose pseudo-class will be changed.
Note: If this is not defined then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>name&lt;/b> = The pseudo-class name.&lt;/li>&lt;li>&lt;b>includeAllNodes&lt;/b> = The value should be "yes" in order to include comments, text and CDATA nodes in the XPath execution, "no" to ignore them.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.TogglePseudoClassOperation',&lt;br/>          arg-elementLocation, '.',&lt;br/>          arg-name, '',&lt;br/>          arg-includeAllNodes, 'no'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_TogglePseudoClassOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ToggleSurroundWithElementOperation',
          arg-element, '&lt;element/>',
          arg-schemaAware, 'true'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Toggle "surround with element" operation.
 If there is no selection in the document and the caret is inside a word,
the word is wrapped in the given element (or unwrapped if it is already
included in the element), else the fragment is inserted at caret position.
 If there is a selection in the document, it is wrapped in the given element
(or unwrapped if it is already included in the element).
&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>element&lt;/b> = The element to surround with.&lt;/li>&lt;li>&lt;b>schemaAware&lt;/b> = This argument applies only on the surround with element operation and controls if the insertion is schema aware or not. When schema aware is enabled and the element insertion is not allowed, a dialog will be shown proposing insertion solutions, like:
 - splitting an ancestor of the node at insertion offset and inserting the element between the resulted elements;
 - inserting the element somewhere in the proximity of the insertion offset (left or right without skipping content);
 - inserting the element at insertion offset, even it is not allowed.

Note: if a selection exists the surround with element operation is not schema aware.
Possible values are: true, false. Default value is true.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ToggleSurroundWithElementOperation',&lt;br/>          arg-element, '&lt;element/>',&lt;br/>          arg-schemaAware, 'true'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ToggleSurroundWithElementOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.UnwrapTagsOperation',
          arg-unwrapElementLocation, '.'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Unwrap element tags.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>unwrapElementLocation&lt;/b> = An XPath expression indicating the element to unwrap.
Note: If it is not defined then the element at the caret is unwrapped.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.UnwrapTagsOperation',&lt;br/>          arg-unwrapElementLocation, '.'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_UnwrapTagsOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.WebappMarkAsSavedOperation'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Marks the Web Author document as saved.&lt;/p>&lt;br/>Arguments: &lt;p style="margin-left:10px;">This operation has no arguments.&lt;/p> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.WebappMarkAsSavedOperation'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_WebappMarkAsSavedOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.XQueryOperation',
          arg-sourceLocation, '.',
          arg-targetLocation, '.',
          arg-script, '',
          arg-action, 'Replace',
          arg-caretPosition, 'First editable position',
          arg-expandEditorVariables, 'true',
          arg-suspendTrackChanges, 'false'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Run an XQuery script on a source element and then replace or insert the result in a target element.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>sourceLocation&lt;/b> = An XPath expression indicating the element that the script will be applied on.
Note: If it is not defined then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>targetLocation&lt;/b> = An XPath expression indicating the insert location for the result of the transformation.
Note: If it is not defined then the insert location will be at the caret.&lt;/li>&lt;li>&lt;b>script&lt;/b> = A path to the script or the script itself.
When using a path the following apply:
- a relative path is resolved to the framework directory.
- the ${framework} editor variable can also be used to refer resources from the framework directory.
- the path is passed through the catalog mappings.
If you provide the actual script, the base system ID for this will be the framework file, so any include/import reference will be resolved relative to the ".framework" file that contains this action definition&lt;/li>&lt;li>&lt;b>action&lt;/b> = The insert action relative to the node determined by the target XPath expression.
It can be: Replace, At caret position, Before, After, Inside as first child or Inside as last child.
&lt;/li>&lt;li>&lt;b>caretPosition&lt;/b> = The position of the caret after the action is executed.
It can be: Preserve, Before, Start, First editable position, End or After.
&lt;/li>&lt;li>&lt;b>expandEditorVariables&lt;/b> = Parameter controlling the expansion of editor variables returned by the script processing.
Expansion is enabled by default.&lt;/li>&lt;li>&lt;b>suspendTrackChanges&lt;/b> = Disable Track Changes during the operation's execution.
By default the state of track changes is not altered.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.XQueryOperation',&lt;br/>          arg-sourceLocation, '.',&lt;br/>          arg-targetLocation, '.',&lt;br/>          arg-script, '',&lt;br/>          arg-action, 'Replace',&lt;br/>          arg-caretPosition, 'First editable position',&lt;br/>          arg-expandEditorVariables, 'true',&lt;br/>          arg-suspendTrackChanges, 'false'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_XQueryOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.XQueryUpdateOperation',
          arg-script, '',
          arg-externalParams, '',
          arg-expandXincludeReferences, 'false'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Executes an XQuery Update script.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>script&lt;/b> = A path to the script or the script itself.
When using a path the following apply:
- a relative path is resolved to the framework directory.
- the ${framework} editor variable can also be used to refer resources from the framework directory.
- the path is passed through the catalog mappings.
If you provide the actual script, the base system ID for this will be the framework file, so any include/import reference will be resolved relative to the ".framework" file that contains this action definition&lt;/li>&lt;li>&lt;b>externalParams&lt;/b> = Provide external parameters to the xquery script.
Should be inserted as name=value pairs separated by comma or line break.&lt;/li>&lt;li>&lt;b>expandXincludeReferences&lt;/b> = Add the elements referred through XInclude to the document model.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.XQueryUpdateOperation',&lt;br/>          arg-script, '',&lt;br/>          arg-externalParams, '',&lt;br/>          arg-expandXincludeReferences, 'false'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_XQueryUpdateOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.XSLTOperation',
          arg-sourceLocation, '.',
          arg-targetLocation, '.',
          arg-script, '',
          arg-action, 'Replace',
          arg-caretPosition, 'First editable position',
          arg-expandEditorVariables, 'true',
          arg-suspendTrackChanges, 'false'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Run an XSLT script on a source element and then replace or insert the result in a target element.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>sourceLocation&lt;/b> = An XPath expression indicating the element that the script will be applied on.
Note: If it is not defined then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>targetLocation&lt;/b> = An XPath expression indicating the insert location for the result of the transformation.
Note: If it is not defined then the insert location will be at the caret.&lt;/li>&lt;li>&lt;b>script&lt;/b> = A path to the script or the script itself.
When using a path the following apply:
- a relative path is resolved to the framework directory.
- the ${framework} editor variable can also be used to refer resources from the framework directory.
- the path is passed through the catalog mappings.
If you provide the actual script, the base system ID for this will be the framework file, so any include/import reference will be resolved relative to the ".framework" file that contains this action definition&lt;/li>&lt;li>&lt;b>action&lt;/b> = The insert action relative to the node determined by the target XPath expression.
It can be: Replace, At caret position, Before, After, Inside as first child or Inside as last child.
&lt;/li>&lt;li>&lt;b>caretPosition&lt;/b> = The position of the caret after the action is executed.
It can be: Preserve, Before, Start, First editable position, End or After.
&lt;/li>&lt;li>&lt;b>expandEditorVariables&lt;/b> = Parameter controlling the expansion of editor variables returned by the script processing.
Expansion is enabled by default.&lt;/li>&lt;li>&lt;b>suspendTrackChanges&lt;/b> = Disable Track Changes during the operation's execution.
By default the state of track changes is not altered.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.XSLTOperation',&lt;br/>          arg-sourceLocation, '.',&lt;br/>          arg-targetLocation, '.',&lt;br/>          arg-script, '',&lt;br/>          arg-action, 'Replace',&lt;br/>          arg-caretPosition, 'First editable position',&lt;br/>          arg-expandEditorVariables, 'true',&lt;br/>          arg-suspendTrackChanges, 'false'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_XSLTOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_action(
          name, '${caret}Insert',
          description, 'Insert an element after the current one',
          operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation',
          icon, url('insert.png'),
          arg-fragment, '&lt;element>&lt;/element>',
          arg-insertLocation, '.',
          arg-insertPosition, 'After'
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>An action with common parameters.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_action</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_action_list(
  oxy_action(
          name, '${caret}Insert',
          description, 'Insert an element after the current one',
          operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation',
          icon, url('insert.png'),
          arg-fragment, '&lt;element>&lt;/element>',
          arg-insertLocation, '.',
          arg-insertPosition, 'After'
  ),
  oxy_action(
          name, 'Delete',
          description, 'Deletes the current element',
          operation, 'ro.sync.ecss.extensions.commons.operations.DeleteElementOperation'
  )
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A list of actions with common parameters.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_action_list</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_audio(
   href, oxy_url(oxy_base-uri(),attr(data)),
   width, attr(width, length)
)</String>
                                </field>
                                <field name="descriptionString">
                                    <String>An audio form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_audio</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_browser(
   href, oxy_url(oxy_base-uri(), attr(data)),
   width, attr(width, length),
   height, attr(height, length)
)</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A browser form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_browser</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_button(
         actionID, 'myActionID',
         showIcon, true
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A button form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_button</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_buttonGroup(
    icon, url('http://www.oxygenxml.com/img/icn_oxy20.png'),
    label, 'A group of actions',
    tooltip, 'These actions do this and that..',
    actionIDs, 'action1, action2'
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A button-group form control with actions defined in the framework.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_buttonGroup</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_buttonGroup(
    label, 'A group of actions',
    icon, url('http://www.oxygenxml.com/img/icn_oxy20.png'),
    actions,
      oxy_action_list(
          oxy_action(
                name, 'Insert',
                description, 'Insert an element after the current one',
                operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation',
                arg-fragment, '&lt;element>&lt;/element>',
                arg-insertLocation, '.',
                arg-insertPosition, 'After'
          ),
          oxy_action(
                name, 'Delete',
                description, 'Deletes the current element',
                operation, 'ro.sync.ecss.extensions.commons.operations.DeleteElementOperation'
          )
      )
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A button-group form control with actions defined in-placem, in the CSS.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_buttonGroup_in_place_actions</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_button(action, oxy_action(
          name, '${caret}Insert',
          description, 'Insert an element after the current one',
          icon, url('insert.png'),
          operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation',
          arg-fragment, '&lt;element>&lt;/element>',
          arg-insertLocation, '.',
          arg-insertPosition, 'After'
)
, showIcon, true);</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A button form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_button_in_place_action</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_checkbox(
        edit, '@attribute',
        values, 'On',
        uncheckedValues, 'Off',
        labels, 'On/Off'
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A checkbox form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_checkbox</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_combobox(
            edit, '@attribute',
            editable, false,
            values, 'value1, value2, value3',
            labels, 'Value no1, Value no2, Value no3'
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A combobox form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_combobox</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_compound_action(
         name, oxy_getActionName('framework.id', 'Fallback'),
         description, 'Insert an "element" and then rename it to "rename"',
	oxy_action(
		name, 'Insert',
		description, 'Insert an element after the current one',
		operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation',
		icon, url('insert.png'),
		arg-fragment, '&lt;element>&lt;/element>',
		arg-insertLocation, '.',
		arg-insertPosition, 'After'
	),
	oxy_action(
	    name, 'Rename',
	    description, 'Renames the current element',
	    operation, 'ro.sync.ecss.extensions.commons.operations.RenameElementOperation',
	    arg-elementName, 'rename',
	    arg-elementLocation, '.'
	)
)

</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A list of actions with common parameters.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_compound_action</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_datePicker(
          edit, '@attribute',
          columns, 16,
          format, 'yyyy-MM-dd'
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A date-picker form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_datePicker</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_htmlContent(
         href, 'htmlContent.html',
         id, 'div_id',
         width, 100%
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A form control able to render HTML content.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_htmlContent</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_label(text, "", width, 10em, color, inherit)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A label form control with a width and color.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_label</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_label(text, "", styles, "font-weight:bold;width:200px")
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A label form control styled using CSS-like propertie.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_label_with_styles</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_popup(
            edit, '@attribute',
            values, 'value1, value2, value3, value4, value5',
            labels, 'Value no1, Value no2, Value no3, Value no4, Value no5',
            resultSeparator, '|',
            columns, 10,
            selectionMode, 'multiple',
            fontInherit, true
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A popup form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_popup</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_textArea(
          edit, '#text',
          contentType, 'text/javascript',
          rows, 10,
          columns, 30
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A text area form control with syntax highlight.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_textArea</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_textfield(
          edit, '@my_attr',
          columns, 40)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A text field form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_textfield</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_urlChooser(
          edit, '@file',
          columns, 25
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>An URL chooser form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_urlChooser</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_video(
   href, oxy_url(oxy_base-uri(), attr(data)),
   width, attr(width, length),
   height, attr(height, length)
)</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A video form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_video</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/html</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;datalist id="id${caret}">
  &lt;option value="">&lt;/option>
  &lt;option value="">&lt;/option>
&lt;/datalist></String>
                                </field>
                                <field name="descriptionString">
                                    <String>HTML data list with autocomplete options</String>
                                </field>
                                <field name="renderString">
                                    <String>datalist</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/html</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;dl>
  &lt;dt>${caret}&lt;/dt>&lt;dd>&lt;/dd>
  &lt;dt>&lt;/dt>&lt;dd>&lt;/dd>
&lt;/dl></String>
                                </field>
                                <field name="descriptionString">
                                    <String>HTML definition list</String>
                                </field>
                                <field name="renderString">
                                    <String>dl</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/html</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;figure>
  &lt;img src="src${caret}" alt="">
  &lt;figcaption>&lt;/figcaption>
&lt;/figure></String>
                                </field>
                                <field name="descriptionString">
                                    <String>HTML figure with image and caption</String>
                                </field>
                                <field name="renderString">
                                    <String>figure</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/html</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;ol type="1${caret}">
  &lt;li>&lt;/li>
  &lt;li>&lt;/li>
&lt;/ol></String>
                                </field>
                                <field name="descriptionString">
                                    <String>HTML ordered list</String>
                                </field>
                                <field name="renderString">
                                    <String>ol</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/html</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;table>
  &lt;caption>${caret}&lt;/caption>
  &lt;thead>
    &lt;tr>
      &lt;th>&lt;/th>
      &lt;th>&lt;/th>
    &lt;/tr>
  &lt;/thead>
  &lt;tbody>
    &lt;tr>
      &lt;td>&lt;/td>
      &lt;td>&lt;/td>
    &lt;/tr>
  &lt;/tbody>
&lt;/table></String>
                                </field>
                                <field name="descriptionString">
                                    <String>HTML table</String>
                                </field>
                                <field name="renderString">
                                    <String>table</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/html</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;ul>
  &lt;li>${caret}&lt;/li>
  &lt;li>&lt;/li>
&lt;/ul></String>
                                </field>
                                <field name="descriptionString">
                                    <String>HTML unordered list</String>
                                </field>
                                <field name="renderString">
                                    <String>ul</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/json</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>"key${caret}": []</String>
                                </field>
                                <field name="descriptionString">
                                    <String>JSON array</String>
                                </field>
                                <field name="renderString">
                                    <String>array</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/json</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>{"key${caret}": "val"}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>JSON object</String>
                                </field>
                                <field name="renderString">
                                    <String>obj</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/json</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>{
    "name": "${caret}",
    "version": "1.0.0",
    "description": "",
    "main": "index.js",
    "scripts": {},
    "keywords": [],
    "author": "${user}",
    "license": "EPL",
    "dependencies": {},
    "devDependencies": {}
}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>JSON package</String>
                                </field>
                                <field name="renderString">
                                    <String>pack</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/json</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>"key${caret}": "val"</String>
                                </field>
                                <field name="descriptionString">
                                    <String>JSON key/value pair</String>
                                </field>
                                <field name="renderString">
                                    <String>pair</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ChangeAttributeOperation',
          arg-elementLocation, '.',
          arg-name, '',
          arg-namespace, '',
          arg-value, '',
          arg-removeIfEmpty, 'true',
          arg-editAttribute, 'true'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Add/modify/delete an attribute.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementLocation&lt;/b> = An XPath expression indicating the element whose attribute will be changed.
Note: If it is not defined then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>name&lt;/b> = The attribute local name.&lt;/li>&lt;li>&lt;b>namespace&lt;/b> = The attribute namespace. Leave it empty for no namespace.&lt;/li>&lt;li>&lt;b>value&lt;/b> = The attribute value. Set it empty to remove the attribute.&lt;/li>&lt;li>&lt;b>removeIfEmpty&lt;/b> = True means that the attribute should be removed if an empty value is provided. The default behavior is to remove it.&lt;/li>&lt;li>&lt;b>editAttribute&lt;/b> = If an in-place editor exists for this attribute, it will automatically activate the in-pace editor and it will start editing.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ChangeAttributeOperation',&lt;br/>          arg-elementLocation, '.',&lt;br/>          arg-name, '',&lt;br/>          arg-namespace, '',&lt;br/>          arg-value, '',&lt;br/>          arg-removeIfEmpty, 'true',&lt;br/>          arg-editAttribute, 'true'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ChangeAttributeOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ChangeAttributesOperation',
          arg-elementLocations, '.',
          arg-attributeNames, '',
          arg-values, '',
          arg-removeIfEmpty, 'true'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Add/change/remove one or more attributes for one or more elements.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementLocations&lt;/b> = An XPath expression indicating the elements whose attributes will be affected.
Note: If it is not defined, then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>attributeNames&lt;/b> = The names of the attributes to change/insert/remove, each on a new line. The provided values can be local names or Clark notations ({attribute_namespace}attibute_name).&lt;/li>&lt;li>&lt;b>values&lt;/b> = The attribute values, each on a new line. An empty value will remove the corresponding attribute if 'removeIfEmpty' is set to 'true' (it is by default).&lt;/li>&lt;li>&lt;b>removeIfEmpty&lt;/b> = 'true' means the attribute should be removed if an empty value is provided. The default value is 'true'.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ChangeAttributesOperation',&lt;br/>          arg-elementLocations, '.',&lt;br/>          arg-attributeNames, '',&lt;br/>          arg-values, '',&lt;br/>          arg-removeIfEmpty, 'true'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ChangeAttributesOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ChangePseudoClassesOperation',
          arg-setLocations, '.',
          arg-setPseudoClassNames, '',
          arg-removeLocations, '.',
          arg-removePseudoClassNames, '',
          arg-includeAllNodes, 'no'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Sets a set of pseudo classes to all nodes identified by an XPath expression.
Removes a set of pseudo classes from all nodes identified by an XPath expression.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>setLocations&lt;/b> = An XPath expression indicating a list of nodes on which the specified list of pseudo classes will be set.
Note: If it is not defined, then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>setPseudoClassNames&lt;/b> = A space-separated list of pseudo class names which will be set on the matched nodes.&lt;/li>&lt;li>&lt;b>removeLocations&lt;/b> = An XPath expression indicating a list of nodes from which the specified list of pseudo classes will be removed.
Note: If it is not defined, then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>removePseudoClassNames&lt;/b> = A space-separated list of pseudo class names which will be removed from the matched nodes.&lt;/li>&lt;li>&lt;b>includeAllNodes&lt;/b> = The value should be "yes" in order to include comments, text and CDATA nodes in the XPath execution, "no" to ignore them.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ChangePseudoClassesOperation',&lt;br/>          arg-setLocations, '.',&lt;br/>          arg-setPseudoClassNames, '',&lt;br/>          arg-removeLocations, '.',&lt;br/>          arg-removePseudoClassNames, '',&lt;br/>          arg-includeAllNodes, 'no'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ChangePseudoClassesOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.DeleteElementOperation',
          arg-elementLocation, '.'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Deletes the element specified by an XPath expression or the element at the caret position&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementLocation&lt;/b> = An XPath expression indicating the element to be deleted.
Note: If it is not defined, then the element at the caret position will be used.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.DeleteElementOperation',&lt;br/>          arg-elementLocation, '.'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_DeleteElementOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.DeleteElementsOperation',
          arg-elementLocations, '.'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Deletes the elements specified by an XPath expression or the element at the caret position&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementLocations&lt;/b> = An XPath expression indicating the elements to be deleted.
Note: If it is not defined then the element at the caret position will be used.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.DeleteElementsOperation',&lt;br/>          arg-elementLocations, '.'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_DeleteElementsOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteCommandLineOperation',
          arg-name, 'Command Line Operation',
          arg-workingDirectory, '.',
          arg-cmdLine, '',
          arg-showConsole, 'false'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Author operation allowing the execution of command lines.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>name&lt;/b> = The name of the operation. It will also be used as the name of the console.&lt;/li>&lt;li>&lt;b>workingDirectory&lt;/b> = The path to the working directory where the command line will be executed.&lt;/li>&lt;li>&lt;b>cmdLine&lt;/b> = The command line to be executed. It can contain oXygen editor variables. IMPORTANT: This operation is meant for executing programs. Not any string that a command line interpreter (or shell) accepts can be run by this operation.For example, the "dir" command line from Windows is not accepted as it is. The accepted form is "cmd /c dir".&lt;/li>&lt;li>&lt;b>showConsole&lt;/b> = True to show the console when running the command line.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteCommandLineOperation',&lt;br/>          arg-name, 'Command Line Operation',&lt;br/>          arg-workingDirectory, '.',&lt;br/>          arg-cmdLine, '',&lt;br/>          arg-showConsole, 'false'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ExecuteCommandLineOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteMultipleActionsOperation',
          arg-actionIDs, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Run a sequence of actions defined in the associated document type.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>actionIDs&lt;/b> = The IDs of the actions that will be executed in sequence, separated either by new lines or by commas.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteMultipleActionsOperation',&lt;br/>          arg-actionIDs, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ExecuteMultipleActionsOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteMultipleWebappCompatibleActionsOperation',
          arg-actionIDs, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Run a sequence of actions defined in the associated document type.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>actionIDs&lt;/b> = The IDs of the actions that will be executed in sequence, separated either by new lines or by commas.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteMultipleWebappCompatibleActionsOperation',&lt;br/>          arg-actionIDs, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ExecuteMultipleWebappCompatibleActionsOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteTransformationScenariosOperation',
          arg-scenarioNames, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Run a named transformation scenario defined in the associated document type.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>scenarioNames&lt;/b> = The names of the transformation scenario which will be executed, separated by new lines.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteTransformationScenariosOperation',&lt;br/>          arg-scenarioNames, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ExecuteTransformationScenariosOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.InsertEquationOperation',
          arg-fragment, '&lt;mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML">&lt;/mml:math>'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Insert a MathML equation.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>fragment&lt;/b> = The fragment of XML containing the default MathML content which should be inserted&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.InsertEquationOperation',&lt;br/>          arg-fragment, '&lt;mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML">&lt;/mml:math>'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_InsertEquationOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation',
          arg-fragment, '&lt;element/>',
          arg-insertLocation, '.',
          arg-insertPosition, 'Inside as first child',
          arg-schemaAware, 'true',
          arg-goToNextEditablePosition, 'true'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Insert a document fragment.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>fragment&lt;/b> = The fragment to be inserted&lt;/li>&lt;li>&lt;b>insertLocation&lt;/b> = An XPath expression indicating the insert location for the fragment.
Note: If it is not defined then the insert location will be at the caret.&lt;/li>&lt;li>&lt;b>insertPosition&lt;/b> = The insert position relative to the node determined by the XPath expression.
Can be: Before, Inside as first child, Inside as last child or After.
Note: If the XPath expression is not defined this argument is ignored&lt;/li>&lt;li>&lt;b>schemaAware&lt;/b> = Controlling if the insertion is schema aware or not. When is enabled and the fragments insertion is not allowed, a dialog will be shown proposing one of following solutions if they apply:
 - insert the fragments inside a new element. The name of the element to wrap the fragments in is computed by analyzing the left or right siblings;
 - split an ancestor of the node at insertion offset and insert the fragments between the resulted elements;
 - insert the fragments somewhere in the proximity of the insertion offset(left or right without skipping content);
 - insert at offset the plain text resulted after removing the mark-up;
 - insert the fragments at insertion offset, even they are not allowed.

Can be: true, false. Default value is true.&lt;/li>&lt;li>&lt;b>goToNextEditablePosition&lt;/b> = After inserting the fragment, the first editable position is detected and the caret is placed at that location. It handles any in-place editors used to edit attributes. It will be ignored if the fragment specifies a caret position using the caret editor variable.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation',&lt;br/>          arg-fragment, '&lt;element/>',&lt;br/>          arg-insertLocation, '.',&lt;br/>          arg-insertPosition, 'Inside as first child',&lt;br/>          arg-schemaAware, 'true',&lt;br/>          arg-goToNextEditablePosition, 'true'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_InsertFragmentOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.InsertOrReplaceFragmentOperation',
          arg-fragment, '&lt;element/>',
          arg-insertLocation, '.',
          arg-insertPosition, 'Inside as first child',
          arg-schemaAware, 'true',
          arg-goToNextEditablePosition, 'true'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Insert a document fragment. If selection is present, the selection will be replaced with the given fragment.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>fragment&lt;/b> = The fragment to be inserted&lt;/li>&lt;li>&lt;b>insertLocation&lt;/b> = An XPath expression indicating the insert location for the fragment.
Note: If it is not defined then the insert location will be at the caret.&lt;/li>&lt;li>&lt;b>insertPosition&lt;/b> = The insert position relative to the node determined by the XPath expression.
Can be: Before, Inside as first child, Inside as last child, Replace or After.
Note: If the XPath expression is not defined this argument is ignored&lt;/li>&lt;li>&lt;b>schemaAware&lt;/b> = Controlling if the insertion is schema aware or not. When is enabled and the fragments insertion is not allowed, a dialog will be shown proposing one of following solutions if they apply:
 - insert the fragments inside a new element. The name of the element to wrap the fragments in is computed by analyzing the left or right siblings;
 - split an ancestor of the node at insertion offset and insert the fragments between the resulted elements;
 - insert the fragments somewhere in the proximity of the insertion offset(left or right without skipping content);
 - insert at offset the plain text resulted after removing the mark-up;
 - insert the fragments at insertion offset, even they are not allowed.

Can be: true, false. Default value is true.&lt;/li>&lt;li>&lt;b>goToNextEditablePosition&lt;/b> = After inserting the fragment, the first editable position is detected and the caret is placed at that location. It handles any in-place editors used to edit attributes. It will be ignored if the fragment specifies a caret position using the caret editor variable.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.InsertOrReplaceFragmentOperation',&lt;br/>          arg-fragment, '&lt;element/>',&lt;br/>          arg-insertLocation, '.',&lt;br/>          arg-insertPosition, 'Inside as first child',&lt;br/>          arg-schemaAware, 'true',&lt;br/>          arg-goToNextEditablePosition, 'true'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_InsertOrReplaceFragmentOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.InsertOrReplaceTextOperation',
          arg-text, '',
          arg-schemaAware, 'true'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Insert a simple text. If selection is present, the selected text will be replaced with the new one.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>text&lt;/b> = The text to be inserted&lt;/li>&lt;li>&lt;b>schemaAware&lt;/b> = Controlling if the insertion is schema aware or not. When is enabled and the fragments insertion is not allowed, a dialog will be shown proposing one of following solutions if they apply:
 - insert the fragments inside a new element. The name of the element to wrap the fragments in is computed by analyzing the left or right siblings;
 - split an ancestor of the node at insertion offset and insert the fragments between the resulted elements;
 - insert the fragments somewhere in the proximity of the insertion offset(left or right without skipping content);
 - insert at offset the plain text resulted after removing the mark-up;
 - insert the fragments at insertion offset, even they are not allowed.

Can be: true, false. Default value is true.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.InsertOrReplaceTextOperation',&lt;br/>          arg-text, '',&lt;br/>          arg-schemaAware, 'true'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_InsertOrReplaceTextOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.InsertXIncludeOperation'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Insert an XInclude element&lt;/p>&lt;br/>Arguments: &lt;p style="margin-left:10px;">This operation has no arguments.&lt;/p> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.InsertXIncludeOperation'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_InsertXIncludeOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.JSOperation',
          arg-script, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Run Javascript code which calls AuthorAccess API by using the predefined field 'authorAccess'.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>script&lt;/b> = The Javascript content to execute. It must have a function called doOperation() which can use the predefined variable "authorAccess".
The "authorAccess" variable has access to the entire Java API "ro.sync.ecss.extensions.api.AuthorAccess".&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.JSOperation',&lt;br/>          arg-script, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_JSOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.MoveCaretOperation',
          arg-xpathLocation, '.',
          arg-position, 'Inside, at the beginning',
          arg-selection, 'None'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Author operation capable of moving the caret relative to an XML node identified by an XPath expression. The operation can also select an XML element or its content.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>xpathLocation&lt;/b> = An XPath expression identifying the node relative to which the caret will be moved. If the expression identifies more than one node, only the first one will be taken into account.&lt;/li>&lt;li>&lt;b>position&lt;/b> = The position relative to the node obtained from the XPath expression where the caret will be moved. When also choosing to perform a selection, "Before" and "Inside, at the beginning" will both place the caret at the beginning of the selection. In the same way, "After" and "Inside, at the end" will place the caret at the end of the selection.&lt;/li>&lt;li>&lt;b>selection&lt;/b> = This argument specifies if the operation should select the element obtained from the XPath expression, its content or nothing at all.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.MoveCaretOperation',&lt;br/>          arg-xpathLocation, '.',&lt;br/>          arg-position, 'Inside, at the beginning',&lt;br/>          arg-selection, 'None'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_MoveCaretOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.MoveElementOperation',
          arg-sourceLocation, '.',
          arg-moveOnlySourceContentNodes, 'false',
          arg-deleteLocation, '.',
          arg-surroundFragment, '&lt;element/>',
          arg-targetLocation, '.',
          arg-insertPosition, 'Inside as first child',
          arg-processTrackedChangesForXPathLocations, 'false'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Moves an element to a different location. The element to move as well as the destination are provided through XPath expressions.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>sourceLocation&lt;/b> = An XPath expression that identifies the node to be moved. If missing, the node at caret will be moved.&lt;/li>&lt;li>&lt;b>moveOnlySourceContentNodes&lt;/b> = Controls whether the source element is moved entirely or just its content (the content of a node consists in text, other nodes or both). If true, the copied fragment consists in just the content of the node identified by the argument 'sourceLocation'. If false, the entire node will be copied.&lt;/li>&lt;li>&lt;b>deleteLocation&lt;/b> = An XPath expression that identifies the node to be removed. Optional. If missing, the node identified by 'sourceLocation' as being moved will be removed.&lt;/li>&lt;li>&lt;b>surroundFragment&lt;/b> = A string representation of an XML fragment. The moved node will be inserted in the first leaf will be this fragment and this fragment containing the moved node will be placed at the destination.&lt;/li>&lt;li>&lt;b>targetLocation&lt;/b> = An XPath expression that identifies the location where the node must be moved to.&lt;/li>&lt;li>&lt;b>insertPosition&lt;/b> = The insert position relative to the node determined by the "targetLocation" XPath expression.
Can be: Before, Inside as first child, Inside as last child or After.
Note: If the XPath expression is not defined this argument is ignored&lt;/li>&lt;li>&lt;b>processTrackedChangesForXPathLocations&lt;/b> = When nodes are located via XPath, if you have nodes deleted with change tracking in the document they are considered as being present by default.
But if you set this argument to 'true', the nodes deleted with track changes will be ignored when the xpath locations are computed. &lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.MoveElementOperation',&lt;br/>          arg-sourceLocation, '.',&lt;br/>          arg-moveOnlySourceContentNodes, 'false',&lt;br/>          arg-deleteLocation, '.',&lt;br/>          arg-surroundFragment, '&lt;element/>',&lt;br/>          arg-targetLocation, '.',&lt;br/>          arg-insertPosition, 'Inside as first child',&lt;br/>          arg-processTrackedChangesForXPathLocations, 'false'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_MoveElementOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.OpenInSystemAppOperation',
          arg-resourcePath, '.',
          arg-isUnparsedEntity, 'false',
          arg-mediaType, 'html'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Open in default system application&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>resourcePath&lt;/b> = An XPath expression that gives the path of the resource that must be opened.&lt;/li>&lt;li>&lt;b>isUnparsedEntity&lt;/b> = True if the value returned by the resourcePath argument represents the name of an unparsed entity.&lt;/li>&lt;li>&lt;b>mediaType&lt;/b> = The media type of the file to be opened. &lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.OpenInSystemAppOperation',&lt;br/>          arg-resourcePath, '.',&lt;br/>          arg-isUnparsedEntity, 'false',&lt;br/>          arg-mediaType, 'html'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_OpenInSystemAppOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.PromoteDemoteItemOperation',
          arg-promote, 'false'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Promotes or demotes a list item.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>promote&lt;/b> = Should be true to promote the list item at the caret position, or false to demote it.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.PromoteDemoteItemOperation',&lt;br/>          arg-promote, 'false'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_PromoteDemoteItemOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ReloadContentOperation',
          arg-markAsNotModified, 'false'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Reloads the content of the editor by reading again from the URL used to open it&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>markAsNotModified&lt;/b> = After reloading the content the editor may appear as modified. Sometimes, the content is already present on the file server, so the user should not save it again. This flags can be used in these cases to prevent the editor from showing as modified&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ReloadContentOperation',&lt;br/>          arg-markAsNotModified, 'false'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ReloadContentOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.RemovePseudoClassOperation',
          arg-elementLocation, '.',
          arg-name, '',
          arg-includeAllNodes, 'no'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Removes the pseudo class for an element.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementLocation&lt;/b> = An XPath expression indicating the element or elements whose pseudo-class will be changed.
Note: If this is not defined then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>name&lt;/b> = The pseudo-class name.&lt;/li>&lt;li>&lt;b>includeAllNodes&lt;/b> = The value should be "yes" in order to include comments, text and CDATA nodes in the XPath execution, "no" to ignore them.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.RemovePseudoClassOperation',&lt;br/>          arg-elementLocation, '.',&lt;br/>          arg-name, '',&lt;br/>          arg-includeAllNodes, 'no'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_RemovePseudoClassOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.RenameElementOperation',
          arg-elementName, '',
          arg-elementLocation, '.'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Renames the elements identified by the given XPath expression or the current element if no XPath is provided.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementName&lt;/b> = A string representing the new elements' qualified name. To declare a new namespace, append to the qualified name the pound (#) character and the namespace declaration.&lt;/li>&lt;li>&lt;b>elementLocation&lt;/b> = An XPath expression indicating the elements to be renamed.
Note: If it is not defined then the element at the caret position will be used.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.RenameElementOperation',&lt;br/>          arg-elementName, '',&lt;br/>          arg-elementLocation, '.'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_RenameElementOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ReplaceContentOperation',
          arg-content, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Replaces the content of a document.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>content&lt;/b> = The new content of the document.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ReplaceContentOperation',&lt;br/>          arg-content, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ReplaceContentOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ReplaceElementContentOperation',
          arg-elementLocation, '.',
          arg-fragment, '&lt;element/>'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Replaces the content of the fully selected element or the content of the element at caret (if the selection is empty or a node is not entirely selected)&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementLocation&lt;/b> = An XPath expression indicating the element whose attribute will be changed.
Note: If it is not defined then the element at the caret position or the current fully selected element will be used.&lt;/li>&lt;li>&lt;b>fragment&lt;/b> = The new content of the element.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ReplaceElementContentOperation',&lt;br/>          arg-elementLocation, '.',&lt;br/>          arg-fragment, '&lt;element/>'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ReplaceElementContentOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.SetPseudoClassOperation',
          arg-elementLocation, '.',
          arg-name, '',
          arg-includeAllNodes, 'no'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Sets the pseudo class for an element.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementLocation&lt;/b> = An XPath expression indicating the element or elements whose pseudo-class will be changed.
Note: If this is not defined then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>name&lt;/b> = The pseudo-class name.&lt;/li>&lt;li>&lt;b>includeAllNodes&lt;/b> = The value should be "yes" in order to include comments, text and CDATA nodes in the XPath execution, "no" to ignore them.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.SetPseudoClassOperation',&lt;br/>          arg-elementLocation, '.',&lt;br/>          arg-name, '',&lt;br/>          arg-includeAllNodes, 'no'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_SetPseudoClassOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.SetReadOnlyStatusOperation',
          arg-read-only, 'true',
          arg-reason, '',
          arg-reason-code, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Changes the document read-only status.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>read-only&lt;/b> = Sets the read-only status of the current document.Can be:
 - true: for making the document read-only
 - false: for making the document writable
Default value is true.&lt;/li>&lt;li>&lt;b>reason&lt;/b> = The reason for the document being read-only. It will be displayed when the user tries to edit the document.
If not specified, a default message will be displayed to the user.&lt;/li>&lt;li>&lt;b>reason-code&lt;/b> = The code for the reason for the document being read-only. It will be accessible through API. Optional.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.SetReadOnlyStatusOperation',&lt;br/>          arg-read-only, 'true',&lt;br/>          arg-reason, '',&lt;br/>          arg-reason-code, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_SetReadOnlyStatusOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ShowElementDocumentationOperation',
          arg-URL pattern, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Shows the current element documentation in reference manual.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>URL pattern&lt;/b> = The URL pattern of elements documentation.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ShowElementDocumentationOperation',&lt;br/>          arg-URL pattern, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ShowElementDocumentationOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.SurroundWithFragmentOperation',
          arg-fragment, '&lt;element/>',
          arg-schemaAware, 'true'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Surround the selected text with a document fragment. If there is no selection the fragment will be inserted at the current position.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>fragment&lt;/b> = The fragment to surround with. The first leaf will be the destination of the text to surround.&lt;/li>&lt;li>&lt;b>schemaAware&lt;/b> = Controlling if the insertion is schema aware or not. When the schema aware is enabled and the fragments insertion is not allowed a dialog will be shown, proposing solutions, like:
 - insert the fragments inside a new element. The name of the element to wrap the fragments in is computed by analyzing the left or right siblings;
 - split an ancestor of the node at insertion offset and insert the fragments between the resulted elements;
 - insert the fragments somewhere in the proximity of the insertion offset(left or right without skipping content);
Note: if a selection exists the surround with fragment operation is not schema aware.
Can be: true, false. Default value is true.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.SurroundWithFragmentOperation',&lt;br/>          arg-fragment, '&lt;element/>',&lt;br/>          arg-schemaAware, 'true'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_SurroundWithFragmentOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.SurroundWithTextOperation',
          arg-header, '',
          arg-footer, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Surround a selection with text. Places a header at the start of the selection and a footer at the end.If no selection exists, the word at caret will be surrounded.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>header&lt;/b> = The text to append before&lt;/li>&lt;li>&lt;b>footer&lt;/b> = The text to append after&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.SurroundWithTextOperation',&lt;br/>          arg-header, '',&lt;br/>          arg-footer, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_SurroundWithTextOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.TogglePseudoClassOperation',
          arg-elementLocation, '.',
          arg-name, '',
          arg-includeAllNodes, 'no'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Toggles on/off the pseudo-class of an element.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>elementLocation&lt;/b> = An XPath expression indicating the element or elements whose pseudo-class will be changed.
Note: If this is not defined then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>name&lt;/b> = The pseudo-class name.&lt;/li>&lt;li>&lt;b>includeAllNodes&lt;/b> = The value should be "yes" in order to include comments, text and CDATA nodes in the XPath execution, "no" to ignore them.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.TogglePseudoClassOperation',&lt;br/>          arg-elementLocation, '.',&lt;br/>          arg-name, '',&lt;br/>          arg-includeAllNodes, 'no'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_TogglePseudoClassOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ToggleSurroundWithElementOperation',
          arg-element, '&lt;element/>',
          arg-schemaAware, 'true'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Toggle "surround with element" operation.
 If there is no selection in the document and the caret is inside a word,
the word is wrapped in the given element (or unwrapped if it is already
included in the element), else the fragment is inserted at caret position.
 If there is a selection in the document, it is wrapped in the given element
(or unwrapped if it is already included in the element).
&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>element&lt;/b> = The element to surround with.&lt;/li>&lt;li>&lt;b>schemaAware&lt;/b> = This argument applies only on the surround with element operation and controls if the insertion is schema aware or not. When schema aware is enabled and the element insertion is not allowed, a dialog will be shown proposing insertion solutions, like:
 - splitting an ancestor of the node at insertion offset and inserting the element between the resulted elements;
 - inserting the element somewhere in the proximity of the insertion offset (left or right without skipping content);
 - inserting the element at insertion offset, even it is not allowed.

Note: if a selection exists the surround with element operation is not schema aware.
Possible values are: true, false. Default value is true.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ToggleSurroundWithElementOperation',&lt;br/>          arg-element, '&lt;element/>',&lt;br/>          arg-schemaAware, 'true'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ToggleSurroundWithElementOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.UnwrapTagsOperation',
          arg-unwrapElementLocation, '.'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Unwrap element tags.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>unwrapElementLocation&lt;/b> = An XPath expression indicating the element to unwrap.
Note: If it is not defined then the element at the caret is unwrapped.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.UnwrapTagsOperation',&lt;br/>          arg-unwrapElementLocation, '.'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_UnwrapTagsOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.WebappMarkAsSavedOperation'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Marks the Web Author document as saved.&lt;/p>&lt;br/>Arguments: &lt;p style="margin-left:10px;">This operation has no arguments.&lt;/p> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.WebappMarkAsSavedOperation'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_WebappMarkAsSavedOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.XQueryOperation',
          arg-sourceLocation, '.',
          arg-targetLocation, '.',
          arg-script, '',
          arg-action, 'Replace',
          arg-caretPosition, 'First editable position',
          arg-expandEditorVariables, 'true',
          arg-suspendTrackChanges, 'false'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Run an XQuery script on a source element and then replace or insert the result in a target element.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>sourceLocation&lt;/b> = An XPath expression indicating the element that the script will be applied on.
Note: If it is not defined then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>targetLocation&lt;/b> = An XPath expression indicating the insert location for the result of the transformation.
Note: If it is not defined then the insert location will be at the caret.&lt;/li>&lt;li>&lt;b>script&lt;/b> = A path to the script or the script itself.
When using a path the following apply:
- a relative path is resolved to the framework directory.
- the ${framework} editor variable can also be used to refer resources from the framework directory.
- the path is passed through the catalog mappings.
If you provide the actual script, the base system ID for this will be the framework file, so any include/import reference will be resolved relative to the ".framework" file that contains this action definition&lt;/li>&lt;li>&lt;b>action&lt;/b> = The insert action relative to the node determined by the target XPath expression.
It can be: Replace, At caret position, Before, After, Inside as first child or Inside as last child.
&lt;/li>&lt;li>&lt;b>caretPosition&lt;/b> = The position of the caret after the action is executed.
It can be: Preserve, Before, Start, First editable position, End or After.
&lt;/li>&lt;li>&lt;b>expandEditorVariables&lt;/b> = Parameter controlling the expansion of editor variables returned by the script processing.
Expansion is enabled by default.&lt;/li>&lt;li>&lt;b>suspendTrackChanges&lt;/b> = Disable Track Changes during the operation's execution.
By default the state of track changes is not altered.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.XQueryOperation',&lt;br/>          arg-sourceLocation, '.',&lt;br/>          arg-targetLocation, '.',&lt;br/>          arg-script, '',&lt;br/>          arg-action, 'Replace',&lt;br/>          arg-caretPosition, 'First editable position',&lt;br/>          arg-expandEditorVariables, 'true',&lt;br/>          arg-suspendTrackChanges, 'false'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_XQueryOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.XQueryUpdateOperation',
          arg-script, '',
          arg-externalParams, '',
          arg-expandXincludeReferences, 'false'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Executes an XQuery Update script.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>script&lt;/b> = A path to the script or the script itself.
When using a path the following apply:
- a relative path is resolved to the framework directory.
- the ${framework} editor variable can also be used to refer resources from the framework directory.
- the path is passed through the catalog mappings.
If you provide the actual script, the base system ID for this will be the framework file, so any include/import reference will be resolved relative to the ".framework" file that contains this action definition&lt;/li>&lt;li>&lt;b>externalParams&lt;/b> = Provide external parameters to the xquery script.
Should be inserted as name=value pairs separated by comma or line break.&lt;/li>&lt;li>&lt;b>expandXincludeReferences&lt;/b> = Add the elements referred through XInclude to the document model.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.XQueryUpdateOperation',&lt;br/>          arg-script, '',&lt;br/>          arg-externalParams, '',&lt;br/>          arg-expandXincludeReferences, 'false'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_XQueryUpdateOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.XSLTOperation',
          arg-sourceLocation, '.',
          arg-targetLocation, '.',
          arg-script, '',
          arg-action, 'Replace',
          arg-caretPosition, 'First editable position',
          arg-expandEditorVariables, 'true',
          arg-suspendTrackChanges, 'false'</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Run an XSLT script on a source element and then replace or insert the result in a target element.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>sourceLocation&lt;/b> = An XPath expression indicating the element that the script will be applied on.
Note: If it is not defined then the element at the caret position will be used.&lt;/li>&lt;li>&lt;b>targetLocation&lt;/b> = An XPath expression indicating the insert location for the result of the transformation.
Note: If it is not defined then the insert location will be at the caret.&lt;/li>&lt;li>&lt;b>script&lt;/b> = A path to the script or the script itself.
When using a path the following apply:
- a relative path is resolved to the framework directory.
- the ${framework} editor variable can also be used to refer resources from the framework directory.
- the path is passed through the catalog mappings.
If you provide the actual script, the base system ID for this will be the framework file, so any include/import reference will be resolved relative to the ".framework" file that contains this action definition&lt;/li>&lt;li>&lt;b>action&lt;/b> = The insert action relative to the node determined by the target XPath expression.
It can be: Replace, At caret position, Before, After, Inside as first child or Inside as last child.
&lt;/li>&lt;li>&lt;b>caretPosition&lt;/b> = The position of the caret after the action is executed.
It can be: Preserve, Before, Start, First editable position, End or After.
&lt;/li>&lt;li>&lt;b>expandEditorVariables&lt;/b> = Parameter controlling the expansion of editor variables returned by the script processing.
Expansion is enabled by default.&lt;/li>&lt;li>&lt;b>suspendTrackChanges&lt;/b> = Disable Track Changes during the operation's execution.
By default the state of track changes is not altered.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.XSLTOperation',&lt;br/>          arg-sourceLocation, '.',&lt;br/>          arg-targetLocation, '.',&lt;br/>          arg-script, '',&lt;br/>          arg-action, 'Replace',&lt;br/>          arg-caretPosition, 'First editable position',&lt;br/>          arg-expandEditorVariables, 'true',&lt;br/>          arg-suspendTrackChanges, 'false'&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_XSLTOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_action(
          name, '${caret}Insert',
          description, 'Insert an element after the current one',
          operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation',
          icon, url('insert.png'),
          arg-fragment, '&lt;element>&lt;/element>',
          arg-insertLocation, '.',
          arg-insertPosition, 'After'
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>An action with common parameters.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_action</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_action_list(
  oxy_action(
          name, '${caret}Insert',
          description, 'Insert an element after the current one',
          operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation',
          icon, url('insert.png'),
          arg-fragment, '&lt;element>&lt;/element>',
          arg-insertLocation, '.',
          arg-insertPosition, 'After'
  ),
  oxy_action(
          name, 'Delete',
          description, 'Deletes the current element',
          operation, 'ro.sync.ecss.extensions.commons.operations.DeleteElementOperation'
  )
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A list of actions with common parameters.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_action_list</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_audio(
   href, oxy_url(oxy_base-uri(),attr(data)),
   width, attr(width, length)
)</String>
                                </field>
                                <field name="descriptionString">
                                    <String>An audio form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_audio</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_browser(
   href, oxy_url(oxy_base-uri(), attr(data)),
   width, attr(width, length),
   height, attr(height, length)
)</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A browser form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_browser</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_button(
         actionID, 'myActionID',
         showIcon, true
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A button form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_button</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_buttonGroup(
    icon, url('http://www.oxygenxml.com/img/icn_oxy20.png'),
    label, 'A group of actions',
    tooltip, 'These actions do this and that..',
    actionIDs, 'action1, action2'
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A button-group form control with actions defined in the framework.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_buttonGroup</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_buttonGroup(
    label, 'A group of actions',
    icon, url('http://www.oxygenxml.com/img/icn_oxy20.png'),
    actions,
      oxy_action_list(
          oxy_action(
                name, 'Insert',
                description, 'Insert an element after the current one',
                operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation',
                arg-fragment, '&lt;element>&lt;/element>',
                arg-insertLocation, '.',
                arg-insertPosition, 'After'
          ),
          oxy_action(
                name, 'Delete',
                description, 'Deletes the current element',
                operation, 'ro.sync.ecss.extensions.commons.operations.DeleteElementOperation'
          )
      )
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A button-group form control with actions defined in-placem, in the CSS.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_buttonGroup_in_place_actions</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_button(action, oxy_action(
          name, '${caret}Insert',
          description, 'Insert an element after the current one',
          icon, url('insert.png'),
          operation, 'ro.sync.ecss.extensions.commons.operations.InsertFragmentOperation',
          arg-fragment, '&lt;element>&lt;/element>',
          arg-insertLocation, '.',
          arg-insertPosition, 'After'
)
, showIcon, true);</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A button form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_button_in_place_action</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_checkbox(
        edit, '@attribute',
        values, 'On',
        uncheckedValues, 'Off',
        labels, 'On/Off'
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A checkbox form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_checkbox</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_combobox(
            edit, '@attribute',
            editable, false,
            values, 'value1, value2, value3',
            labels, 'Value no1, Value no2, Value no3'
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A combobox form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_combobox</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_datePicker(
          edit, '@attribute',
          columns, 16,
          format, 'yyyy-MM-dd'
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A date-picker form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_datePicker</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_htmlContent(
         href, 'htmlContent.html',
         id, 'div_id',
         width, 100%
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A form control able to render HTML content.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_htmlContent</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_label(text, "", width, 10em, color, inherit)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A label form control with a width and color.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_label</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_label(text, "", styles, "font-weight:bold;width:200px")
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A label form control styled using CSS-like propertie.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_label_with_styles</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_popup(
            edit, '@attribute',
            values, 'value1, value2, value3, value4, value5',
            labels, 'Value no1, Value no2, Value no3, Value no4, Value no5',
            resultSeparator, '|',
            columns, 10,
            selectionMode, 'multiple',
            fontInherit, true
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A popup form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_popup</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_textArea(
          edit, '#text',
          contentType, 'text/javascript',
          rows, 10,
          columns, 30
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A text area form control with syntax highlight.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_textArea</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_textfield(
          edit, '@my_attr',
          columns, 40)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A text field form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_textfield</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_urlChooser(
          edit, '@file',
          columns, 25
)
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>An URL chooser form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_urlChooser</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>oxy_video(
   href, oxy_url(oxy_base-uri(), attr(data)),
   width, attr(width, length),
   height, attr(height, length)
)</String>
                                </field>
                                <field name="descriptionString">
                                    <String>A video form control.</String>
                                </field>
                                <field name="renderString">
                                    <String>oxy_video</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/markdown</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>
Term${caret}
:   Definition.

</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert a definition list entry</String>
                                </field>
                                <field name="renderString">
                                    <String>definition-entry</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/markdown</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String># ConceptTitle${caret} {.concept}

Content</String>
                                </field>
                                <field name="descriptionString">
                                    <String>[DITA] Insert concept topic</String>
                                </field>
                                <field name="renderString">
                                    <String>dita-concept</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/markdown</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>
## ExampleTitle${caret} {.example}

Content
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>[DITA] Insert example</String>
                                </field>
                                <field name="renderString">
                                    <String>dita-example</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/markdown</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String># ReferenceTitle${caret} {.reference}

## Section {.section}

Content</String>
                                </field>
                                <field name="descriptionString">
                                    <String>[DITA] Insert reference topic</String>
                                </field>
                                <field name="renderString">
                                    <String>dita-reference</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/markdown</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>
## SectionTitle${caret} {.section}

Content
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>[DITA] Insert section</String>
                                </field>
                                <field name="renderString">
                                    <String>dita-section</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/markdown</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String># TaskTitle${caret} {.task}

Context

1.  Command

    Info.

Results.
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>[DITA] Insert task topic</String>
                                </field>
                                <field name="renderString">
                                    <String>dita-task</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/markdown</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>
1.  Command${caret}

    Info.
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>[DITA] Insert task step</String>
                                </field>
                                <field name="renderString">
                                    <String>dita-task-step</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/sch</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;pattern id="${caret}" abstract="true">
  &lt;rule context="">
    &lt;!-- Write your assertions or reports here -->
    &lt;assert test="">&lt;/assert>
  &lt;/rule>
&lt;/pattern></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Defines an abstract pattern</String>
                                </field>
                                <field name="renderString">
                                    <String>ap</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/sch</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;diagnostics>
  &lt;!-- Write your diagnostics here -->
  &lt;diagnostic id="${caret}">&lt;/diagnostic>
&lt;/diagnostics></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Defines a set of diagnostics that may be referred from asserts or reports</String>
                                </field>
                                <field name="renderString">
                                    <String>diagnostics</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/sch</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;pattern id="${caret}" is-a="">
  &lt;param name="" value=""/>
&lt;/pattern></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Instance of an abstract pattern</String>
                                </field>
                                <field name="renderString">
                                    <String>ip</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/sch</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;phase id="${caret}">
  &lt;active pattern=""/>
&lt;/phase></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Defines a new phase</String>
                                </field>
                                <field name="renderString">
                                    <String>phase</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/sch</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;pattern id="${caret}">
  &lt;rule context="">
    &lt;!-- Write your assertions or reports here -->
    &lt;assert test="">&lt;/assert>
  &lt;/rule>
&lt;/pattern></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Defines a pattern that contains an assertion</String>
                                </field>
                                <field name="renderString">
                                    <String>pra</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/sch</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;pattern id="${caret}">
  &lt;rule context="">
    &lt;!-- Write your assertions or reports here -->
    &lt;report test="">&lt;/report>
  &lt;/rule>
&lt;/pattern></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Defines a pattern that contains a report</String>
                                </field>
                                <field name="renderString">
                                    <String>prr</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/sch</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;rule context="${caret}">
  &lt;!-- Write your assertions or reports here -->
  &lt;assert test="">&lt;/assert>
&lt;/rule></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Defines a new pattern rule that contains an assertion</String>
                                </field>
                                <field name="renderString">
                                    <String>ra</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/sch</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;rule context="${caret}">
  &lt;!-- Write your assertions or reports here -->
  &lt;report test="">&lt;/report>
&lt;/rule></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Defines a new pattern rule that contains a report</String>
                                </field>
                                <field name="renderString">
                                    <String>rr</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xml</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;egXML xmlns="http://www.tei-c.org/ns/Examples">
    &lt;xi:include href="../TEILex0.examples/examples.stripped.xml" corresp="../TEILex0.examples/examples.xml" xpointer="${ask('What is the id of the element you want to include?', text, '')}"/>
&lt;/egXML></String>
                                </field>
                                <field name="descriptionString">
                                    <String></String>
                                </field>
                                <field name="renderString">
                                    <String> egXml + xi:include with xpointer() scheme</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <String>M1 M2 X</String>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xml</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;egXML xmlns="http://www.tei-c.org/ns/Examples">
    &lt;xi:include href="../TEILex0.examples/examples.stripped.xml" corresp="../TEILex0.examples/examples.xml" xpointer="${ask('Gimme your element() value!', text, '')}"/>
&lt;/egXML></String>
                                </field>
                                <field name="descriptionString">
                                    <String></String>
                                </field>
                                <field name="renderString">
                                    <String> egxml + xi:include with eLement() scheme</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <String>M1 M2 L</String>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xml</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xi:include href="../TEILex0.examples/examples.stripped.xml" corresp="../TEILex0.examples/examples.xml" xpointer="element(${ask('Gimme your element() value!', text, '')})"/>
</String>
                                </field>
                                <field name="descriptionString">
                                    <String></String>
                                </field>
                                <field name="renderString">
                                    <String> xi:include with eleMent() scheme</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <String>M1 M2 M</String>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xml</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xi:include href="../TEILex0.examples/examples.xml" corresp="../TEILex0.examples/examples.xml" xpointer="${ask('What is the id of the element you want to include?', text, '')}"/>
</String>
                                </field>
                                <field name="descriptionString">
                                    <String></String>
                                </field>
                                <field name="renderString">
                                    <String> xi:include with xPointer() scheme</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <String>M1 M2 P</String>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xml</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xr type="${ask('What type of cross-reference is this?', combobox, ('synonymy': 'synonym';'antonymy':'antonymy';'hypernymy':'hypernym'; 'hyponymy':'hyponymy'; 'meronymy':'meronymy'), 'related')}">
    &lt;lbl>${ask('Cross-reference label', String, '')}&lt;/lbl>
    &lt;ref type="${ask('reference type', combobox, ('entry':'entry'; 'sense':'sense'), 'entry')}">${ask('Reference istelf', String, '')}&lt;/ref>
&lt;/xr>
</String>
                                </field>
                                <field name="descriptionString">
                                    <String></String>
                                </field>
                                <field name="renderString">
                                    <String>cross-reference</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <String>M1 M2 C</String>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xml</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;entry xml:id="${ask('xml:id', input_type, '')}" xml:lang="${ask('xml:lang', input_type, '')}" type="mainEntry">
    &lt;form type="lemma">
        &lt;orth>${ask('Orthographic form of the lemma', input_type, '')}&lt;/orth>
    &lt;/form>
    &lt;gramGrp>
        &lt;gram type="pos">${ask('Part of speech', input_type, '')}&lt;/gram>
    &lt;/gramGrp>
    &lt;sense xml:id="${ask('Sense xml:id', input_type, '')}">
        &lt;def>${ask('Definition', input_type, '')}&lt;/def>
    &lt;/sense>
&lt;/entry>
</String>
                                </field>
                                <field name="descriptionString">
                                    <String></String>
                                </field>
                                <field name="renderString">
                                    <String>entry</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <String>M1 M2 E</String>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xml</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;cit type="example">
    &lt;quote>${selection}&lt;/quote>
&lt;/cit></String>
                                </field>
                                <field name="descriptionString">
                                    <String></String>
                                </field>
                                <field name="renderString">
                                    <String>example</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xpath</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>every $${caret} in expr satisfies test_expr</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert an every expression</String>
                                </field>
                                <field name="renderString">
                                    <String>every</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xpath</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>for $x in ${caret}expression
return </String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert a simple FLWOR expression </String>
                                </field>
                                <field name="renderString">
                                    <String>flwor - simple</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xpath</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>if (${caret})
  then expression
  else expression</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert an if expression</String>
                                </field>
                                <field name="renderString">
                                    <String>if</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xpath</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>let $${caret} := expression</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert a single Let Clause </String>
                                </field>
                                <field name="renderString">
                                    <String>let</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xpath</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>some $${caret} in expr satisfies test_expr</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert a some expression</String>
                                </field>
                                <field name="renderString">
                                    <String>some</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>declare base-uri "${caret}"; </String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert the base-uri declaration</String>
                                </field>
                                <field name="renderString">
                                    <String>base-uri</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>declare boundary-space preserve;
${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert the boundary space declaration</String>
                                </field>
                                <field name="renderString">
                                    <String>boundry-space</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>case $${caret} as sequence_type return expression</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert a Case Clause </String>
                                </field>
                                <field name="renderString">
                                    <String>case</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>declare default collation "${caret}"; </String>
                                </field>
                                <field name="descriptionString">
                                    <String>The default collation is the collation that is used by functions and operators that require a collation if no other collation is specified.</String>
                                </field>
                                <field name="renderString">
                                    <String>collation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>declare copy-namespaces preserve, no-inherit;
${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Copy-namespaces mode controls the namespace bindings that are assigned when an existing element node is copied by an element constructor or document constructor.</String>
                                </field>
                                <field name="renderString">
                                    <String>copy-namespaces</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>declare default element namespace "${caret}"; </String>
                                </field>
                                <field name="descriptionString">
                                    <String>A default element/type namespace declaration declares a namespace URI that is associated with unprefixed names of elements and types</String>
                                </field>
                                <field name="renderString">
                                    <String>defe</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>declare default function namespace "${caret}"; </String>
                                </field>
                                <field name="descriptionString">
                                    <String>A default function namespace declaration declares a namespace URI that is associated with unprefixed function names in function calls and function declarations.</String>
                                </field>
                                <field name="renderString">
                                    <String>deff</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>declare default order empty least;
${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>This declaration controls the processing of empty sequences and NaN values as ordering keys in an order by clause in a FLWOR expression.
Syntax: "declare" "default" "order" "empty" ("greatest" | "least")</String>
                                </field>
                                <field name="renderString">
                                    <String>empty</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>every $${caret} in expr satisfies test_expr</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert an every expression</String>
                                </field>
                                <field name="renderString">
                                    <String>every</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>for $x in ${caret}expression
let $var := expression
where $x = condition
order by $x/tag
return </String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert a complete FLWOR expression </String>
                                </field>
                                <field name="renderString">
                                    <String>flwor - complete</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>for $x in ${caret}expression
let $var := expression
return </String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert a simple FLWOR-let expression </String>
                                </field>
                                <field name="renderString">
                                    <String>flwor - let</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>for $x in ${caret}expression
order by $x/tag
return </String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert a simple FLWOR-order by expression </String>
                                </field>
                                <field name="renderString">
                                    <String>flwor - order by</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>for $x in ${caret}expression
return </String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert a simple FLWOR expression </String>
                                </field>
                                <field name="renderString">
                                    <String>flwor - simple</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>for $x in ${caret}expression
where $x = condition
return </String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert a simple FLWOR-where expression </String>
                                </field>
                                <field name="renderString">
                                    <String>flwor - where</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>declare function ${caret} ( (: $arg1 as type, ... :) ) as sequence_type
{
 }; </String>
                                </field>
                                <field name="descriptionString">
                                    <String>A function declaration specifies the name of the function, the names and datatypes of the parameters, and the datatype of the result.</String>
                                </field>
                                <field name="renderString">
                                    <String>function</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>if (${caret})
  then expression
  else expression</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert an if expression</String>
                                </field>
                                <field name="renderString">
                                    <String>if</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>import module namespace ns1 = "${caret}"; </String>
                                </field>
                                <field name="descriptionString">
                                    <String>A module import imports the function declarations and variable declarations from one or more library modules into the function signatures and in-scope variables of the importing module.</String>
                                </field>
                                <field name="renderString">
                                    <String>import</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>let $${caret} := expression</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert a single Let Clause </String>
                                </field>
                                <field name="renderString">
                                    <String>let</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>module namespace ns1 = "${caret}"; </String>
                                </field>
                                <field name="descriptionString">
                                    <String>A module declaration serves to identify a module as a library module.</String>
                                </field>
                                <field name="renderString">
                                    <String>module</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>declare namespace ns1 = "${caret}"; </String>
                                </field>
                                <field name="descriptionString">
                                    <String>A namespace declaration declares a namespace prefix and associates it with a namespace URI, adding the (prefix, URI) pair to the set of statically known namespaces.</String>
                                </field>
                                <field name="renderString">
                                    <String>namespace</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>declare default order empty least;
${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>This declaration controls the processing of empty sequences and NaN values as ordering keys in an order by clause in a FLWOR expression.
 Syntax: "declare" "default" "order" "empty" ("greatest" | "least")</String>
                                </field>
                                <field name="renderString">
                                    <String>order</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>declare ordering ordered;
${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>An ordering mode declaration sets the ordering mode in the static context, overriding any implementation-defined default.
 Syntax: "declare" "ordering" ("ordered" | "unordered")</String>
                                </field>
                                <field name="renderString">
                                    <String>ordering</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>some $${caret} in expr satisfies test_expr</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert a some expression</String>
                                </field>
                                <field name="renderString">
                                    <String>some</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>switch (${caret})
  case "value" return expression
  default return expression
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>The typeswitch expression chooses one of several expressions to evaluate based on the dynamic type of an input value.</String>
                                </field>
                                <field name="renderString">
                                    <String>switch</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>typeswitch (${caret})
  case $var1 as sequence_type return expression
  default $var2 return expression
</String>
                                </field>
                                <field name="descriptionString">
                                    <String>The typeswitch expression chooses one of several expressions to evaluate based on the dynamic type of an input value.</String>
                                </field>
                                <field name="renderString">
                                    <String>typeswitch</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>declare variable $${caret} := value; </String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert a simple variable declaration</String>
                                </field>
                                <field name="renderString">
                                    <String>var</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>declare variable $${caret} as type external; </String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert an external variable declaration</String>
                                </field>
                                <field name="renderString">
                                    <String>vare</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>declare variable $${caret} as type := value; </String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert a typed variable declaration</String>
                                </field>
                                <field name="renderString">
                                    <String>vart</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xquery</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>xquery version "1.0" encoding "utf-8";
${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>The version declaration occurs at the beginning of the module and identifies the applicable XQuery syntax and semantics for the module.</String>
                                </field>
                                <field name="renderString">
                                    <String>xquery</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:annotation>
      &lt;xs:documentation>${caret}&lt;/xs:documentation>
&lt;/xs:annotation></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Annotation-Documentation.</String>
                                </field>
                                <field name="renderString">
                                    <String>ad</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:attributeGroup name="${caret}">

&lt;/xs:attributeGroup></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Attribute-Group-Name.</String>
                                </field>
                                <field name="renderString">
                                    <String>agn</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:attributeGroup ref="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Attribute-Group-Reference.</String>
                                </field>
                                <field name="renderString">
                                    <String>agr</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:all>
      ${caret}
&lt;/xs:all></String>
                                </field>
                                <field name="descriptionString">
                                    <String>ALL.</String>
                                </field>
                                <field name="renderString">
                                    <String>all</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:attribute name="${caret}">

&lt;/xs:attribute></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Attribute-Name</String>
                                </field>
                                <field name="renderString">
                                    <String>an</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:attribute name="${caret}">
      &lt;xs:annotation>
          &lt;xs:documentation>&lt;/xs:documentation>
      &lt;/xs:annotation>
&lt;/xs:attribute></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Attribute-Name-Annotation-documentation.</String>
                                </field>
                                <field name="renderString">
                                    <String>ana</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:any/>${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>ANY.</String>
                                </field>
                                <field name="renderString">
                                    <String>any</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:any namespace="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>ANY-Namespace.</String>
                                </field>
                                <field name="renderString">
                                    <String>anyn</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:complexContent>
      ${caret}
&lt;/xs:complexContent></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Complex-Content.</String>
                                </field>
                                <field name="renderString">
                                    <String>cc</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:choice>
      ${caret}
&lt;/xs:choice></String>
                                </field>
                                <field name="descriptionString">
                                    <String>CHoice.</String>
                                </field>
                                <field name="renderString">
                                    <String>ch</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:complexType>
      ${caret}
&lt;/xs:complexType></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Complex-Type.</String>
                                </field>
                                <field name="renderString">
                                    <String>ct</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:complexType name="${caret}">

&lt;/xs:complexType></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Complex-Type-Name.</String>
                                </field>
                                <field name="renderString">
                                    <String>ctn</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:extension base="${caret}">

&lt;/xs:extension></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Extension.</String>
                                </field>
                                <field name="renderString">
                                    <String>e</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:element name="${caret}">

&lt;/xs:element></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Element-Name.</String>
                                </field>
                                <field name="renderString">
                                    <String>en</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:element name="${caret}">
      &lt;xs:annotation>
          &lt;xs:documentation>&lt;/xs:documentation>
      &lt;/xs:annotation>
&lt;/xs:element></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Element-Name-Annotation-documentation</String>
                                </field>
                                <field name="renderString">
                                    <String>ena</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:enumeration value="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Enumeration-Value.</String>
                                </field>
                                <field name="renderString">
                                    <String>ev</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:enumeration value="${caret}">
      &lt;xs:annotation>
          &lt;xs:documentation>&lt;/xs:documentation>
      &lt;/xs:annotation>
&lt;/xs:enumeration></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Enumeration-Value-Annotation.</String>
                                </field>
                                <field name="renderString">
                                    <String>eva</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:fractionDigits value="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Fraction-Digits.</String>
                                </field>
                                <field name="renderString">
                                    <String>fd</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:group name="${caret}">

&lt;/xs:group></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Group-Name.</String>
                                </field>
                                <field name="renderString">
                                    <String>gn</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:group ref="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Group-Reference.</String>
                                </field>
                                <field name="renderString">
                                    <String>gr</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:length value="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>LENgth.</String>
                                </field>
                                <field name="renderString">
                                    <String>len</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:maxExclusive value="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>MAX-Exclusive.</String>
                                </field>
                                <field name="renderString">
                                    <String>maxe</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:maxInclusive value="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>MAX-Inclusive.</String>
                                </field>
                                <field name="renderString">
                                    <String>maxi</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:maxLength value="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>MAX-Length.</String>
                                </field>
                                <field name="renderString">
                                    <String>maxl</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:minExclusive value="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>MIN-Exclusive.</String>
                                </field>
                                <field name="renderString">
                                    <String>mine</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:minInclusive value="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>MIN-Inclusive.</String>
                                </field>
                                <field name="renderString">
                                    <String>mini</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:minLength value="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>MIN-Length.</String>
                                </field>
                                <field name="renderString">
                                    <String>minl</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:notation name="${caret}" public=""/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Notation.</String>
                                </field>
                                <field name="renderString">
                                    <String>n</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:pattern value="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Pattern.</String>
                                </field>
                                <field name="renderString">
                                    <String>p</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:restriction>
      ${caret}
&lt;/xs:restriction></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Restriction.</String>
                                </field>
                                <field name="renderString">
                                    <String>r</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:restriction base="${caret}">

&lt;/xs:restriction></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Restriction-Base.</String>
                                </field>
                                <field name="renderString">
                                    <String>rb</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:simpleContent>
      ${caret}
&lt;/xs:simpleContent></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Simple-Content.</String>
                                </field>
                                <field name="renderString">
                                    <String>sc</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">
      ${caret}
&lt;/xs:schema></String>
                                </field>
                                <field name="descriptionString">
                                    <String>SCHema.</String>
                                </field>
                                <field name="renderString">
                                    <String>sch</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema" targetNamespace="${caret}">

&lt;/xs:schema></String>
                                </field>
                                <field name="descriptionString">
                                    <String>SCHema-Target-namespace.</String>
                                </field>
                                <field name="renderString">
                                    <String>scht</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:sequence>
      ${caret}
&lt;/xs:sequence></String>
                                </field>
                                <field name="descriptionString">
                                    <String>SEQuence.</String>
                                </field>
                                <field name="renderString">
                                    <String>seq</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:simpleType>
      ${caret}
&lt;/xs:simpleType></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Simple-Type.</String>
                                </field>
                                <field name="renderString">
                                    <String>st</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:simpleType name="${caret}">

&lt;/xs:simpleType></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Simple-Type-with-Name</String>
                                </field>
                                <field name="renderString">
                                    <String>stn</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:totalDigits value="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Total-Digits.</String>
                                </field>
                                <field name="renderString">
                                    <String>td</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsd</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xs:whiteSpace value="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>White-Space.</String>
                                </field>
                                <field name="renderString">
                                    <String>ws</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>not(${caret})</String>
                                </field>
                                <field name="descriptionString">
                                    <String>not-!.</String>
                                </field>
                                <field name="renderString">
                                    <String>!</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>number(${caret})</String>
                                </field>
                                <field name="descriptionString">
                                    <String>to-number-#.</String>
                                </field>
                                <field name="renderString">
                                    <String>#</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:apply-imports/>${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Apply-Imports.</String>
                                </field>
                                <field name="renderString">
                                    <String>ai</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:attribute name="${caret}">&lt;/xsl:attribute></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Attribute-Name.</String>
                                </field>
                                <field name="renderString">
                                    <String>an</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>ancestor-or-self::${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Ancestor-Or-Self-axix.</String>
                                </field>
                                <field name="renderString">
                                    <String>aos</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:analyze-string select="${caret}" regex="">
    &lt;xsl:matching-substring>&lt;/xsl:matching-substring>
    &lt;xsl:non-matching-substring>&lt;/xsl:non-matching-substring>
    &lt;xsl:fallback>&lt;/xsl:fallback>
&lt;/xsl:analyze-string></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Analyze string.</String>
                                </field>
                                <field name="renderString">
                                    <String>as</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:attribute-set name="${caret}">

&lt;/xsl:attribute-set></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Attribute-Set-Name.</String>
                                </field>
                                <field name="renderString">
                                    <String>asn</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:apply-templates select="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Apply-Templates-Select.</String>
                                </field>
                                <field name="renderString">
                                    <String>ats</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:apply-templates select="${caret}" mode=""/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Apply-Templates-Select-Mode.</String>
                                </field>
                                <field name="renderString">
                                    <String>atsm</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;![CDATA[${caret}]]&gt;</String>
                                </field>
                                <field name="descriptionString">
                                    <String>CData-section.</String>
                                </field>
                                <field name="renderString">
                                    <String>cd</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>ceiling(${caret})</String>
                                </field>
                                <field name="descriptionString">
                                    <String>CEILing.</String>
                                </field>
                                <field name="renderString">
                                    <String>ceil</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>current-group()</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Current-group.</String>
                                </field>
                                <field name="renderString">
                                    <String>cg</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>current-grouping-key()</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Current grouping key.</String>
                                </field>
                                <field name="renderString">
                                    <String>cgk</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:copy>${caret}&lt;/xsl:copy></String>
                                </field>
                                <field name="descriptionString">
                                    <String>COpy.</String>
                                </field>
                                <field name="renderString">
                                    <String>co</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:comment>${caret}&lt;/xsl:comment></String>
                                </field>
                                <field name="descriptionString">
                                    <String>COMment.</String>
                                </field>
                                <field name="renderString">
                                    <String>com</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>concat(${caret}, )</String>
                                </field>
                                <field name="descriptionString">
                                    <String>CONCat.</String>
                                </field>
                                <field name="renderString">
                                    <String>conc</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>contains(${caret}, )</String>
                                </field>
                                <field name="descriptionString">
                                    <String>CONTains.</String>
                                </field>
                                <field name="renderString">
                                    <String>cont</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:copy-of select="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Copy-Of-Select.</String>
                                </field>
                                <field name="renderString">
                                    <String>cos</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:template match="node() | @*">
      &lt;xsl:copy>
          &lt;xsl:apply-templates select="node() | @*"/>
      &lt;/xsl:copy>
&lt;/xsl:template>
      ${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Copy-Template.</String>
                                </field>
                                <field name="renderString">
                                    <String>ct</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:call-template name="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Call-Template-Name.</String>
                                </field>
                                <field name="renderString">
                                    <String>ctn</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:call-template name="${caret}">
      &lt;xsl:with-param name="" select=""/>
&lt;/xsl:call-template></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Call-Template-Name-With-Param.</String>
                                </field>
                                <field name="renderString">
                                    <String>ctnwp</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:choose>
      &lt;xsl:when test="${caret}">

      &lt;/xsl:when>
&lt;/xsl:choose></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Choose-When-Test.</String>
                                </field>
                                <field name="renderString">
                                    <String>cwt</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:choose>
      &lt;xsl:when test="${caret}">

      &lt;/xsl:when>
      &lt;xsl:otherwise>

      &lt;/xsl:otherwise>
&lt;/xsl:choose></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Choose-When-Test-Otherwise.</String>
                                </field>
                                <field name="renderString">
                                    <String>cwto</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>descendant-or-self::${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Descendant-Or-Self-axis.</String>
                                </field>
                                <field name="renderString">
                                    <String>dos</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:element name="${caret}">

&lt;/xsl:element></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Element-Name.</String>
                                </field>
                                <field name="renderString">
                                    <String>en</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:fallback>
      ${caret}
&lt;/xsl:fallback></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Fallback.</String>
                                </field>
                                <field name="renderString">
                                    <String>f</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:for-each-group select="${caret}">
&lt;/xsl:for-each-group> </String>
                                </field>
                                <field name="descriptionString">
                                    <String>For-each-group-select.</String>
                                </field>
                                <field name="renderString">
                                    <String>fegs</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:for-each select="${caret}">

&lt;/xsl:for-each></String>
                                </field>
                                <field name="descriptionString">
                                    <String>For-each-select.</String>
                                </field>
                                <field name="renderString">
                                    <String>fes</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>floor(${caret})</String>
                                </field>
                                <field name="descriptionString">
                                    <String>FLooR.</String>
                                </field>
                                <field name="renderString">
                                    <String>flr</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>format-number(${caret}, )</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Format-Number.</String>
                                </field>
                                <field name="renderString">
                                    <String>fn</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>following-sibling::${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Following-Sibling-axis.</String>
                                </field>
                                <field name="renderString">
                                    <String>fs</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>generate-id(${caret})</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Generate-Id.</String>
                                </field>
                                <field name="renderString">
                                    <String>gi</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:import href="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>IMport-Href.</String>
                                </field>
                                <field name="renderString">
                                    <String>imh</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:include href="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>INclude-Href.</String>
                                </field>
                                <field name="renderString">
                                    <String>inh</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:import-schema>
    &lt;xs:schema targetNamespace="http://my-target-namespace"
        xmlns:xs="http://www.w3.org/2001/XMLSchema">
        ${caret}
    &lt;/xs:schema>
&lt;/xsl:import-schema></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Import schema components.</String>
                                </field>
                                <field name="renderString">
                                    <String>is</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:if test="${caret}">&lt;/xsl:if></String>
                                </field>
                                <field name="descriptionString">
                                    <String>If-Test.</String>
                                </field>
                                <field name="renderString">
                                    <String>it</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:iterate select="${caret}">
    &lt;xsl:param name="p" select="">&lt;/xsl:param>
    &lt;xsl:next-iteration>
        &lt;xsl:with-param name="p" select="">

        &lt;/xsl:with-param>
    &lt;/xsl:next-iteration>
&lt;/xsl:iterate></String>
                                </field>
                                <field name="descriptionString">
                                    <String>The xsl:iterate instruction.</String>
                                </field>
                                <field name="renderString">
                                    <String>iter</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:key name="${caret}" match="" use=""/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Key-name-match-use.</String>
                                </field>
                                <field name="renderString">
                                    <String>k</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>last()${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>LaST.</String>
                                </field>
                                <field name="renderString">
                                    <String>lst</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:message>
      ${caret}
&lt;/xsl:message></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Message.</String>
                                </field>
                                <field name="renderString">
                                    <String>m</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>generate-id(${caret}) = generate-id(key('', ))</String>
                                </field>
                                <field name="descriptionString">
                                    <String></String>
                                </field>
                                <field name="renderString">
                                    <String>mm</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:mode name="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>XSL Mode declaration.</String>
                                </field>
                                <field name="renderString">
                                    <String>mode</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:message terminate="${caret}">&lt;/xsl:message></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Message-Terminate.</String>
                                </field>
                                <field name="renderString">
                                    <String>mt</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:number${caret}/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Number.</String>
                                </field>
                                <field name="renderString">
                                    <String>n</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:number count="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Number-count.</String>
                                </field>
                                <field name="renderString">
                                    <String>nc</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>normalize-space(${caret})</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Normalize-Space.</String>
                                </field>
                                <field name="renderString">
                                    <String>ns</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:otherwise>
      ${caret}
&lt;/xsl:otherwise></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Otherwise.</String>
                                </field>
                                <field name="renderString">
                                    <String>o</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:output encoding="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Output-Encoding.</String>
                                </field>
                                <field name="renderString">
                                    <String>oe</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:output method="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Output-Method.</String>
                                </field>
                                <field name="renderString">
                                    <String>om</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:processing-instruction name="${caret}">&lt;/xsl:processing-instruction></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Processing-Instruction-Name.</String>
                                </field>
                                <field name="renderString">
                                    <String>pin</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:param name="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Param-Name.</String>
                                </field>
                                <field name="renderString">
                                    <String>pn</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>position()${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>POSition.</String>
                                </field>
                                <field name="renderString">
                                    <String>pos</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>preceding-sibling::${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Preceding-Sibling-axis.</String>
                                </field>
                                <field name="renderString">
                                    <String>ps</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:preserve-space elements="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Preserve-Space-Elements.</String>
                                </field>
                                <field name="renderString">
                                    <String>pse</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:result-document href="${caret}">
&lt;/xsl:result-document> </String>
                                </field>
                                <field name="descriptionString">
                                    <String>Result-document-href.</String>
                                </field>
                                <field name="renderString">
                                    <String>rdh</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>round(${caret})</String>
                                </field>
                                <field name="descriptionString">
                                    <String>RouND.</String>
                                </field>
                                <field name="renderString">
                                    <String>rnd</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="1.0">
      ${caret}
&lt;/xsl:stylesheet></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Stylesheet-root-element-v1.</String>
                                </field>
                                <field name="renderString">
                                    <String>s</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:stylesheet xmlns:xsl="http://www.w3.org/1999/XSL/Transform" version="2.0">
      ${caret}
&lt;/xsl:stylesheet></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Stylesheet-root-element-v2.</String>
                                </field>
                                <field name="renderString">
                                    <String>s2</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>string-length(${caret})</String>
                                </field>
                                <field name="descriptionString">
                                    <String>String-Length.</String>
                                </field>
                                <field name="renderString">
                                    <String>sl</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>system-property(xsl:vendor)${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>System-Property-VENdor.</String>
                                </field>
                                <field name="renderString">
                                    <String>spven</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>system-property(xsl:vendor-url)${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>System-Property-VENdor-Url.</String>
                                </field>
                                <field name="renderString">
                                    <String>spvenu</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>system-property(xsl:version)${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>System-Property-VERsion.</String>
                                </field>
                                <field name="renderString">
                                    <String>spver</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:sort select="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Sort-Select.</String>
                                </field>
                                <field name="renderString">
                                    <String>ss</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>substring-after(${caret})</String>
                                </field>
                                <field name="descriptionString">
                                    <String>SubString-After.</String>
                                </field>
                                <field name="renderString">
                                    <String>ssa</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>substring-before(${caret})</String>
                                </field>
                                <field name="descriptionString">
                                    <String>SubString-Before.</String>
                                </field>
                                <field name="renderString">
                                    <String>ssb</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:strip-space elements="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Strip-Space-Elements.</String>
                                </field>
                                <field name="renderString">
                                    <String>sse</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>substring(${caret})</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Sub-STRing.</String>
                                </field>
                                <field name="renderString">
                                    <String>sstr</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>string(${caret})</String>
                                </field>
                                <field name="descriptionString">
                                    <String>to-STRing.</String>
                                </field>
                                <field name="renderString">
                                    <String>str</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>sum(${caret})</String>
                                </field>
                                <field name="descriptionString">
                                    <String>SUM.</String>
                                </field>
                                <field name="renderString">
                                    <String>sum</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>starts-with(${caret}, )</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Starts-With.</String>
                                </field>
                                <field name="renderString">
                                    <String>sw</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>boolean(${caret})</String>
                                </field>
                                <field name="descriptionString">
                                    <String>to-boolean-True-False.</String>
                                </field>
                                <field name="renderString">
                                    <String>tf</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:template name="xsl:initial-template">
	${caret}
&lt;/xsl:template></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Insert Initial Template.</String>
                                </field>
                                <field name="renderString">
                                    <String>tini</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:template match="${caret}">

&lt;/xsl:template></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Template-Match.</String>
                                </field>
                                <field name="renderString">
                                    <String>tm</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:template match="${caret}" mode="">

&lt;/xsl:template></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Template-Match-Mode.</String>
                                </field>
                                <field name="renderString">
                                    <String>tmm</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:template name="${caret}">

&lt;/xsl:template></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Template-Name.</String>
                                </field>
                                <field name="renderString">
                                    <String>tn</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:template name="${caret}" match="">

&lt;/xsl:template></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Template-Name-Match.</String>
                                </field>
                                <field name="renderString">
                                    <String>tnm</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>translate(${caret}, , )</String>
                                </field>
                                <field name="descriptionString">
                                    <String>TRANslate.</String>
                                </field>
                                <field name="renderString">
                                    <String>tran</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>translate(${caret},'ABCDEFGHIJKLMNOPQRSTUVWXYZ','abcdefghijklmnopqrstuvwxyz')</String>
                                </field>
                                <field name="descriptionString">
                                    <String>TRanslate-to-LOwer-case.</String>
                                </field>
                                <field name="renderString">
                                    <String>trlo</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>translate(${caret},'abcdefghijklmnopqrstuvwxyz','ABCDEFGHIJKLMNOPQRSTUVWXYZ')</String>
                                </field>
                                <field name="descriptionString">
                                    <String>TRanslate--to-UPper-case.</String>
                                </field>
                                <field name="renderString">
                                    <String>trup</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:try>
    ${caret}
    &lt;xsl:catch errors="">
        &lt;xsl:message>

        &lt;/xsl:message>
    &lt;/xsl:catch>
&lt;/xsl:try></String>
                                </field>
                                <field name="descriptionString">
                                    <String>XSL Try/Catch</String>
                                </field>
                                <field name="renderString">
                                    <String>try</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:variable name="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Variable-Name.</String>
                                </field>
                                <field name="renderString">
                                    <String>vn</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:variable name="${caret}" select=""/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Variable-Name-Select.</String>
                                </field>
                                <field name="renderString">
                                    <String>vns</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:value-of select="${caret}"/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Value-Of-Select.</String>
                                </field>
                                <field name="renderString">
                                    <String>vos</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;xsl:with-param name="${caret}" select=""/></String>
                                </field>
                                <field name="descriptionString">
                                    <String>With-Param-Name.</String>
                                </field>
                                <field name="renderString">
                                    <String>wpn</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;?xml version="1.0"?>
    ${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Xml-header.</String>
                                </field>
                                <field name="renderString">
                                    <String>x</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;?xml version="1.0" encoding="${caret}"?></String>
                                </field>
                                <field name="descriptionString">
                                    <String>Xml-header-Encoding.</String>
                                </field>
                                <field name="renderString">
                                    <String>xe</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;?xml version="1.0" encoding="UTF-8"?>
  ${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Xml-header-Encoding-UTF-8.</String>
                                </field>
                                <field name="renderString">
                                    <String>xe8</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>&lt;?xml version="1.0" encoding="ISO-8859-1"?>
  ${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>Xml-header-Encoding-ISO-8859-1.</String>
                                </field>
                                <field name="renderString">
                                    <String>xei</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/xsl</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>xmlns:xsl="http://www.w3.org/1999/XSL/Transform"${caret}</String>
                                </field>
                                <field name="descriptionString">
                                    <String>XSL-namespace.</String>
                                </field>
                                <field name="renderString">
                                    <String>xsl</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/css</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteValidationScenariosOperation',
          arg-scenarioNames, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Run a named validation scenario defined in the associated document type.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>scenarioNames&lt;/b> = The names of the validation scenario which will be executed, separated by new lines.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteValidationScenariosOperation',&lt;br/>          arg-scenarioNames, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ExecuteValidationScenariosOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                            <codeTemplateItem>
                                <field name="contentType">
                                    <String>text/less</String>
                                </field>
                                <field name="unparsedInsertString">
                                    <String>operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteValidationScenariosOperation',
          arg-scenarioNames, ''</String>
                                </field>
                                <field name="descriptionString">
                                    <String>&lt;html>&lt;head>&lt;/head>&lt;body>Description:&lt;p style="margin-left:10px;">Run a named validation scenario defined in the associated document type.&lt;/p>&lt;br/>Arguments: &lt;ul>&lt;li>&lt;b>scenarioNames&lt;/b> = The names of the validation scenario which will be executed, separated by new lines.&lt;/li>&lt;/ul> &lt;br/> Template: &lt;br/>&lt;p style="margin-left:10px;">operation, 'ro.sync.ecss.extensions.commons.operations.ExecuteValidationScenariosOperation',&lt;br/>          arg-scenarioNames, ''&lt;/p>&lt;/body>&lt;/html></String>
                                </field>
                                <field name="renderString">
                                    <String>op_ExecuteValidationScenariosOperation</String>
                                </field>
                                <field name="enabled">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="accelerator">
                                    <null/>
                                </field>
                            </codeTemplateItem>
                        </codeTemplateItem-array>
                    </entry>
                    <entry>
                        <String>document.types</String>
                        <documentTypeDescriptor-array/>
                    </entry>
                    <entry>
                        <String>document.types.order</String>
                        <documentTypeEntry-array>
                            <documentTypeEntry>
                                <field name="documentTypeID">
                                    <String>4/tei/teip5odd.framework/TEI ODD</String>
                                </field>
                                <field name="enable">
                                    <Boolean>false</Boolean>
                                </field>
                            </documentTypeEntry>
                            <documentTypeEntry>
                                <field name="documentTypeID">
                                    <String>4/tei/teip5.framework/TEI P5</String>
                                </field>
                                <field name="enable">
                                    <Boolean>false</Boolean>
                                </field>
                            </documentTypeEntry>
                        </documentTypeEntry-array>
                    </entry>
                    <entry>
                        <String>editor.format.preserve.spaces.elements.v11</String>
                        <String-array>
                            <String>xsl:text</String>
                            <String>xsl:comment</String>
                            <String>xsl:processing-instruction</String>
                            <String>literallayout</String>
                            <String>programlisting</String>
                            <String>screen</String>
                            <String>synopsis</String>
                            <String>pre</String>
                            <String>xd:pre</String>
                            <String>egXML</String>
                        </String-array>
                    </entry>
                    <entry>
                        <String>enable.project.master.files.support</String>
                        <Boolean>true</Boolean>
                    </entry>
                    <entry>
                        <String>key.author.editor.option.pane</String>
                        <Boolean>true</Boolean>
                    </entry>
                    <entry>
                        <String>key.author.editor.schema.aware.option.pane</String>
                        <Boolean>true</Boolean>
                    </entry>
                    <entry>
                        <String>key.code.templates.option.pane</String>
                        <Boolean>true</Boolean>
                    </entry>
                    <entry>
                        <String>key.editor.document.type.association.option.pane</String>
                        <Boolean>true</Boolean>
                    </entry>
                    <entry>
                        <String>key.editor.document.type.custom.locations.option.pane</String>
                        <Boolean>true</Boolean>
                    </entry>
                    <entry>
                        <String>key.editor.format.xml.option.pane</String>
                        <Boolean>true</Boolean>
                    </entry>
                    <entry>
                        <String>key.menu.shorcut.keys.option.pane</String>
                        <Boolean>true</Boolean>
                    </entry>
                    <entry>
                        <String>key.xml.parser.option.pane</String>
                        <Boolean>true</Boolean>
                    </entry>
                    <entry>
                        <String>scenario.associations</String>
                        <scenarioAssociation-array>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.examples/examples.xml</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEI Stripper (NS prep for inclusion into main odd file)</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XML</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.odd</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEILex0: Generate documentation</String>
                                        <String>TEILex0: ODD to RELAX NG (XML syntax)</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XPROC</String>
                                        <String>ANT</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.parts/02__entries.xml</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEILex0: Generate documentation</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XPROC</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.parts/04__senses.xml</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEILex0: Generate documentation</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XPROC</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.parts/05__cross-references.xml</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEILex0: Generate documentation</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XPROC</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.parts/03__forms.xml</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEILex0: Generate documentation</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XPROC</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.parts/40__specification.xml</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEILex0: ODD to RELAX NG (XML syntax)</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>ANT</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.parts/20__bibliography.xml</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEILex0: Generate documentation</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XPROC</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>stylesheets/tei-stripper.xsl</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEI Stripper (NS prep for inclusion into main odd file)</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XML</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.parts/08__patterns.xml</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEILex0: Generate documentation</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XPROC</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>xproc/teilex0.xpl</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEILex0: Generate documentation</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XPROC</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.parts/01__introduction.xml</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEILex0: Generate documentation</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XPROC</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.parts/50__contribute.xml</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEILex0: Generate documentation</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XPROC</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.parts/30__annex_A.xml</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEILex0: Generate documentation</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XPROC</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.parts/31__annex_B.xml</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEILex0: Generate documentation</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XPROC</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.parts/07__etymology.xml</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEILex0: Generate documentation</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XPROC</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.parts/045__translations.xml</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEILex0: Generate documentation</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XPROC</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.parts/06__usage.xml</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEILex0: Generate documentation</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XPROC</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.examples/etym.xml</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEI Stripper (NS prep for inclusion into main odd file)</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XML</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                            <scenarioAssociation>
                                <field name="url">
                                    <String>TEILex0.examples/template.xml</String>
                                </field>
                                <field name="scenarioIds">
                                    <list>
                                        <String>TEI Stripper (NS prep for inclusion into main odd file)</String>
                                    </list>
                                </field>
                                <field name="scenarioTypes">
                                    <list>
                                        <String>XML</String>
                                    </list>
                                </field>
                                <field name="scenarioStorageLocations">
                                    <list>
                                        <Byte>2</Byte>
                                    </list>
                                </field>
                            </scenarioAssociation>
                        </scenarioAssociation-array>
                    </entry>
                    <entry>
                        <String>scenarios</String>
                        <scenario-array>
                            <scenario>
                                <field name="advancedOptionsMap">
                                    <null/>
                                </field>
                                <field name="name">
                                    <String>TEILex0: examples to html (not finished)</String>
                                </field>
                                <field name="baseURL">
                                    <String></String>
                                </field>
                                <field name="footerURL">
                                    <String></String>
                                </field>
                                <field name="fOPMethod">
                                    <String>pdf</String>
                                </field>
                                <field name="fOProcessorName">
                                    <String>Apache FOP</String>
                                </field>
                                <field name="headerURL">
                                    <String></String>
                                </field>
                                <field name="inputXSLURL">
                                    <String>${pdu}/stylesheets/tei-dictionary.xsl</String>
                                </field>
                                <field name="inputXMLURL">
                                    <String>${currentFileURL}</String>
                                </field>
                                <field name="defaultScenario">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="isFOPPerforming">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="type">
                                    <String>XSL</String>
                                </field>
                                <field name="saveAs">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="openInBrowser">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="outputResource">
                                    <String>${cfn}.html</String>
                                </field>
                                <field name="openOtherLocationInBrowser">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="locationToOpenInBrowserURL">
                                    <null/>
                                </field>
                                <field name="openInEditor">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="showInHTMLPane">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="showInXMLPane">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="showInSVGPane">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="showInResultSetPane">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="useXSLTInput">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="xsltParams">
                                    <list/>
                                </field>
                                <field name="cascadingStylesheets">
                                    <String-array/>
                                </field>
                                <field name="xslTransformer">
                                    <String>Saxon-PE</String>
                                </field>
                                <field name="extensionURLs">
                                    <String-array/>
                                </field>
                            </scenario>
                            <antScenario>
                                <field name="additionalAntArgs">
                                    <String></String>
                                </field>
                                <field name="buildTarget">
                                    <String></String>
                                </field>
                                <field name="buildFilePath">
                                    <String>${frameworksDir}/tei/xml/tei/stylesheet/relaxng/build-to.xml</String>
                                </field>
                                <field name="ditaParams">
                                    <list>
                                        <antParameter>
                                            <field name="name">
                                                <String>defaultSource</String>
                                            </field>
                                            <field name="description">
                                                <String>TEI source file.</String>
                                            </field>
                                            <field name="value">
                                                <String>${frameworksDir}/tei/xml/tei/odd/p5subset.xml</String>
                                            </field>
                                            <field name="defaultValue">
                                                <null/>
                                            </field>
                                            <field name="type">
                                                <Integer>5</Integer>
                                            </field>
                                            <field name="possibleValues">
                                                <null/>
                                            </field>
                                            <field name="possibleValuesDescriptions">
                                                <null/>
                                            </field>
                                        </antParameter>
                                        <antParameter>
                                            <field name="name">
                                                <String>inputFile</String>
                                            </field>
                                            <field name="description">
                                                <String>Path to the TEI XML file.</String>
                                            </field>
                                            <field name="value">
                                                <String>${pd}/TEILex0.odd</String>
                                            </field>
                                            <field name="defaultValue">
                                                <null/>
                                            </field>
                                            <field name="type">
                                                <Integer>5</Integer>
                                            </field>
                                            <field name="possibleValues">
                                                <null/>
                                            </field>
                                            <field name="possibleValuesDescriptions">
                                                <null/>
                                            </field>
                                        </antParameter>
                                        <antParameter>
                                            <field name="name">
                                                <String>lang</String>
                                            </field>
                                            <field name="description">
                                                <String>The language of the output strings like "Attributes", "Class", "Datatype", "Declaration", "Note", "Optional", "Required", "Recommended", etc.</String>
                                            </field>
                                            <field name="value">
                                                <String>en</String>
                                            </field>
                                            <field name="defaultValue">
                                                <null/>
                                            </field>
                                            <field name="type">
                                                <Integer>5</Integer>
                                            </field>
                                            <field name="possibleValues">
                                                <null/>
                                            </field>
                                            <field name="possibleValuesDescriptions">
                                                <null/>
                                            </field>
                                        </antParameter>
                                        <antParameter>
                                            <field name="name">
                                                <String>outputFile</String>
                                            </field>
                                            <field name="description">
                                                <String>Path where the output schema file will be saved.</String>
                                            </field>
                                            <field name="value">
                                                <String>${pd}/out/TEILex0.rng</String>
                                            </field>
                                            <field name="defaultValue">
                                                <null/>
                                            </field>
                                            <field name="type">
                                                <Integer>5</Integer>
                                            </field>
                                            <field name="possibleValues">
                                                <null/>
                                            </field>
                                            <field name="possibleValuesDescriptions">
                                                <null/>
                                            </field>
                                        </antParameter>
                                        <antParameter>
                                            <field name="name">
                                                <String>oxygenlib</String>
                                            </field>
                                            <field name="description">
                                                <String>Path to the Oxygen library folder.</String>
                                            </field>
                                            <field name="value">
                                                <String>${oxygenInstallDir}/lib</String>
                                            </field>
                                            <field name="defaultValue">
                                                <null/>
                                            </field>
                                            <field name="type">
                                                <Integer>5</Integer>
                                            </field>
                                            <field name="possibleValues">
                                                <null/>
                                            </field>
                                            <field name="possibleValuesDescriptions">
                                                <null/>
                                            </field>
                                        </antParameter>
                                        <antParameter>
                                            <field name="name">
                                                <String>profile</String>
                                            </field>
                                            <field name="description">
                                                <String>The profile of the output file, for example "tei", "oucs", "oucscourses", "enrich".</String>
                                            </field>
                                            <field name="value">
                                                <String>default</String>
                                            </field>
                                            <field name="defaultValue">
                                                <null/>
                                            </field>
                                            <field name="type">
                                                <Integer>5</Integer>
                                            </field>
                                            <field name="possibleValues">
                                                <null/>
                                            </field>
                                            <field name="possibleValuesDescriptions">
                                                <null/>
                                            </field>
                                        </antParameter>
                                    </list>
                                </field>
                                <field name="jvmArgs">
                                    <String>-Xmx256m</String>
                                </field>
                                <field name="useCustomJavaHome">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="customJavaHomeDir">
                                    <String></String>
                                </field>
                                <field name="useCustomANTHome">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="customANTHomeDir">
                                    <String></String>
                                </field>
                                <field name="workingDir">
                                    <String>${cfd}</String>
                                </field>
                                <field name="showConsoleAlways">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="advancedOptionsMap">
                                    <null/>
                                </field>
                                <field name="name">
                                    <String>TEILex0: ODD to RELAX NG (XML syntax)</String>
                                </field>
                                <field name="baseURL">
                                    <null/>
                                </field>
                                <field name="footerURL">
                                    <null/>
                                </field>
                                <field name="fOPMethod">
                                    <null/>
                                </field>
                                <field name="fOProcessorName">
                                    <null/>
                                </field>
                                <field name="headerURL">
                                    <null/>
                                </field>
                                <field name="inputXSLURL">
                                    <null/>
                                </field>
                                <field name="inputXMLURL">
                                    <null/>
                                </field>
                                <field name="defaultScenario">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="isFOPPerforming">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="type">
                                    <String>ANT</String>
                                </field>
                                <field name="saveAs">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="openInBrowser">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="outputResource">
                                    <null/>
                                </field>
                                <field name="openOtherLocationInBrowser">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="locationToOpenInBrowserURL">
                                    <String>${pd}/out/TEILex0.rng</String>
                                </field>
                                <field name="openInEditor">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="showInHTMLPane">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="showInXMLPane">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="showInSVGPane">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="showInResultSetPane">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="useXSLTInput">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="xsltParams">
                                    <list/>
                                </field>
                                <field name="cascadingStylesheets">
                                    <String-array/>
                                </field>
                                <field name="xslTransformer">
                                    <String>ANT</String>
                                </field>
                                <field name="extensionURLs">
                                    <String-array>
                                        <String>${oxygenHome}/classes/</String>
                                        <String>${oxygenHome}/lib/oxygenAuthor.jar</String>
                                        <String>${oxygenHome}/lib/oxygenDeveloper.jar</String>
                                        <String>${oxygenHome}/lib/oxygenEclipse.jar</String>
                                        <String>${oxygenHome}/lib/oxygenAuthorEclipse.jar</String>
                                        <String>${oxygenHome}/lib/oxygenDeveloperEclipse.jar</String>
                                        <String>${oxygenHome}/lib/*resolver*.jar</String>
                                        <String>${oxygenHome}/lib/*xerces*.jar</String>
                                        <String>${oxygenHome}/lib/*saxon*9*.jar</String>
                                        <String>${oxygenHome}/lib/saxon.jar</String>
                                        <String>${oxygenHome}/lib/xml-apis-ext.jar</String>
                                        <String>${oxygenHome}/lib/log4j.jar</String>
                                        <String>${oxygenHome}/lib/oxygen-basic-utilities.jar</String>
                                    </String-array>
                                </field>
                            </antScenario>
                            <scenario>
                                <field name="advancedOptionsMap">
                                    <null/>
                                </field>
                                <field name="name">
                                    <String>TEI Stripper (NS prep for inclusion into main odd file)</String>
                                </field>
                                <field name="baseURL">
                                    <String></String>
                                </field>
                                <field name="footerURL">
                                    <String></String>
                                </field>
                                <field name="fOPMethod">
                                    <String>pdf</String>
                                </field>
                                <field name="fOProcessorName">
                                    <String>Apache FOP</String>
                                </field>
                                <field name="headerURL">
                                    <String></String>
                                </field>
                                <field name="inputXSLURL">
                                    <String>${pdu}/stylesheets/tei-stripper.xsl</String>
                                </field>
                                <field name="inputXMLURL">
                                    <String>${currentFileURL}</String>
                                </field>
                                <field name="defaultScenario">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="isFOPPerforming">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="type">
                                    <String>XML</String>
                                </field>
                                <field name="saveAs">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="openInBrowser">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="outputResource">
                                    <String>${cfn}.stripped.xml</String>
                                </field>
                                <field name="openOtherLocationInBrowser">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="locationToOpenInBrowserURL">
                                    <null/>
                                </field>
                                <field name="openInEditor">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="showInHTMLPane">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="showInXMLPane">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="showInSVGPane">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="showInResultSetPane">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="useXSLTInput">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="xsltParams">
                                    <list/>
                                </field>
                                <field name="cascadingStylesheets">
                                    <String-array/>
                                </field>
                                <field name="xslTransformer">
                                    <String>Saxon-PE</String>
                                </field>
                                <field name="extensionURLs">
                                    <String-array/>
                                </field>
                            </scenario>
                            <xprocScenario>
                                <field name="inputPorts">
                                    <xprocInputPort-array>
                                        <xprocInputPort>
                                            <field name="urls">
                                                <String-array>
                                                    <String>${pdu}/TEILex0.odd</String>
                                                </String-array>
                                            </field>
                                            <field name="portName">
                                                <String>source</String>
                                            </field>
                                        </xprocInputPort>
                                    </xprocInputPort-array>
                                </field>
                                <field name="outputPorts">
                                    <xprocOutputPort-array>
                                        <xprocOutputPort>
                                            <field name="url">
                                                <null/>
                                            </field>
                                            <field name="showInSequenceView">
                                                <Boolean>true</Boolean>
                                            </field>
                                            <field name="portName">
                                                <String>result</String>
                                            </field>
                                        </xprocOutputPort>
                                        <xprocOutputPort>
                                            <field name="url">
                                                <String>${pdu}/../../docs/pages/TEILex0/TEILex0.html</String>
                                            </field>
                                            <field name="showInSequenceView">
                                                <Boolean>true</Boolean>
                                            </field>
                                            <field name="portName">
                                                <String>final</String>
                                            </field>
                                        </xprocOutputPort>
                                        <xprocOutputPort>
                                            <field name="url">
                                                <String>${pdu}/../../docs/pages/TEILex0/spec.html</String>
                                            </field>
                                            <field name="showInSequenceView">
                                                <Boolean>true</Boolean>
                                            </field>
                                            <field name="portName">
                                                <String>third</String>
                                            </field>
                                        </xprocOutputPort>
                                    </xprocOutputPort-array>
                                </field>
                                <field name="xprocOptions">
                                    <xprocOption-array/>
                                </field>
                                <field name="xprocParameters">
                                    <xprocParameterPort-array>
                                        <xprocParameterPort>
                                            <field name="portName">
                                                <String>*</String>
                                            </field>
                                            <field name="parameters">
                                                <xprocParameter-array/>
                                            </field>
                                        </xprocParameterPort>
                                        <xprocParameterPort>
                                            <field name="portName">
                                                <String>parameters</String>
                                            </field>
                                            <field name="parameters">
                                                <xprocParameter-array>
                                                    <xprocParameter>
                                                        <field name="namespaceURI">
                                                            <String></String>
                                                        </field>
                                                        <field name="localName">
                                                            <String>paramName1</String>
                                                        </field>
                                                        <field name="value">
                                                            <null/>
                                                        </field>
                                                    </xprocParameter>
                                                </xprocParameter-array>
                                            </field>
                                        </xprocParameterPort>
                                    </xprocParameterPort-array>
                                </field>
                                <field name="advancedOptionsMap">
                                    <null/>
                                </field>
                                <field name="name">
                                    <String>TEILex0: Generate documentation</String>
                                </field>
                                <field name="baseURL">
                                    <null/>
                                </field>
                                <field name="footerURL">
                                    <null/>
                                </field>
                                <field name="fOPMethod">
                                    <null/>
                                </field>
                                <field name="fOProcessorName">
                                    <null/>
                                </field>
                                <field name="headerURL">
                                    <null/>
                                </field>
                                <field name="inputXSLURL">
                                    <String>${pdu}/xproc/teilex0.xpl</String>
                                </field>
                                <field name="inputXMLURL">
                                    <String></String>
                                </field>
                                <field name="defaultScenario">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="isFOPPerforming">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="type">
                                    <String>XPROC</String>
                                </field>
                                <field name="saveAs">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="openInBrowser">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="outputResource">
                                    <null/>
                                </field>
                                <field name="openOtherLocationInBrowser">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="locationToOpenInBrowserURL">
                                    <String>${pdu}/../../docs/pages/TEILex0/TEILex0.html</String>
                                </field>
                                <field name="openInEditor">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="showInHTMLPane">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="showInXMLPane">
                                    <Boolean>true</Boolean>
                                </field>
                                <field name="showInSVGPane">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="showInResultSetPane">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="useXSLTInput">
                                    <Boolean>false</Boolean>
                                </field>
                                <field name="xsltParams">
                                    <list/>
                                </field>
                                <field name="cascadingStylesheets">
                                    <String-array/>
                                </field>
                                <field name="xslTransformer">
                                    <String>Add-on for Calabash XProc Engine</String>
                                </field>
                                <field name="extensionURLs">
                                    <String-array/>
                                </field>
                            </xprocScenario>
                        </scenario-array>
                    </entry>
                    <entry>
                        <String>tagless.editor.tags.display.mode</String>
                        <Integer>4</Integer>
                    </entry>
                    <entry>
                        <String>tags.background.color</String>
                        <String>0,0,0</String>
                    </entry>
                    <entry>
                        <String>tags.compact.mode</String>
                        <Boolean>false</Boolean>
                    </entry>
                    <entry>
                        <String>tags.foreground.color</String>
                        <String>255,255,255</String>
                    </entry>
                    <entry>
                        <String>validation.base.uri.fixup</String>
                        <Boolean>false</Boolean>
                    </entry>
                </serializableOrderedMap>
            </serialized>
        </options>
    </meta>
    <projectTree name="TEILex0.xpr">
        <folder masterFiles="true" name="Master Files">
            <file name="TEILex0.odd"/>
            <file name="stylesheets/TEILex0.xsl"/>
        </folder>
        <folder path="../../"/>
    </projectTree>
</project>